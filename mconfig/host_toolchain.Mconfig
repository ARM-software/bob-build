# Copyright 2016-2019 Arm Limited.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

### Host toolchain options ###
# The host options are not yet read by `toolchain.go`, so are empty, and
# exist so that `host_explore.py` can be agnostic to the target type when
# doing e.g. `get_config_string(tgtType + "_GNU_PREFIX")`. They are
# defined here, rather than in the superproject, because even when they are
# fully supported, they will be empty most of the time.

config HOST_GNU_PREFIX
	string "Host GNU compiler prefix"
	default ""

config HOST_CLANG_PREFIX
	string "Host Clang compiler prefix"
	default ""

config HOST_ARMCLANG_PREFIX
	string "Host Arm Compiler 6 prefix"
	default ""

config HOST_GNU_FLAGS
	string
	default ""

config HOST_CLANG_TRIPLE
	string
	default ""

# Bob also cannot know the superproject's desired STL implementation, so the
# superproject must also define the following:

# config HOST_STL_LIBRARY
# 	string "Host STL implementation"
# 	default "stdc++"

### Toolchain configuration options ###

config HOST_CLANG_USE_GNU_LIBS
	bool "Host uses GNU startup libraries"
	depends on HOST_TOOLCHAIN_CLANG
	default n
	help
	  Detect the location of the configured GNU toolchain's `crt1.o`,
	  `libgcc.a` and `libgcc_s.so`, and pass these to Clang.

config HOST_CLANG_USE_GNU_STL
	bool "Host uses GNU libstdc++"
	depends on HOST_TOOLCHAIN_CLANG && HOST_STL_LIBRARY = "stdc++"
	default n
	help
	  Detect the location of the configured GNU toolchain's
	  STL implementation, and pass this to Clang.

config HOST_CLANG_USE_GNU_BINUTILS
	bool "Host uses GNU binutils"
	depends on HOST_TOOLCHAIN_CLANG
	default y if !ANDROID
	help
	  Add the configured GNU toolchain's `bin/` directory to Clang's binary
	  search path, allowing it to use the linker and assembler.
