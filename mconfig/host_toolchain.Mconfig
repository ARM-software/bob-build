# Copyright 2016-2020 Arm Limited.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

### Host toolchain options ###
# The host options are not yet read by `toolchain.go`, so are empty, and
# exist so that `host_explore.py` can be agnostic to the target type when
# doing e.g. `get_config_string(tgtType + "_GNU_PREFIX")`. They are
# defined here, rather than in the superproject, because even when they are
# fully supported, they will be empty most of the time.

config HOST_GNU_PREFIX
	string "Host GNU compiler prefix"
	default "prebuilts/gcc/linux-x86/x86/x86_64-linux-android-4.9/bin/x86_64-linux-android-" if BUILDER_ANDROID_MAKE || BUILDER_ANDROID_BP
	default ""

config HOST_CLANG_PREFIX
	string "Host Clang compiler prefix"
	default "prebuilts/clang/host/linux-x86/clang-r370808/bin/" if BUILDER_ANDROID_MAKE || BUILDER_ANDROID_BP
	default ""

config HOST_ARMCLANG_PREFIX
	string "Host Arm Compiler 6 prefix"
	default ""

config HOST_XCODE_PREFIX
	string "Host Xcode prefix"
	default ""

config HOST_ARMCLANG_FLAGS
	string
	default ""
	help
	  Extra flags passed to the compiler when building with the Arm Compiler.

config HOST_GNU_FLAGS
	string
	default ""

config HOST_CLANG_TRIPLE
	string
	default ""

config HOST_XCODE_TRIPLE
	string
	default ""

config HOST_SYSROOT
	string "Host sysroot"
	default ""
	help
	  The path to the host's system root directory. This should
	  contain include and lib directories, with headers and libraries
	  for the host system.

	  Generally this is expected to remain empty. The host compiler is
	  expected to have been compiled with sufficient information to
	  locate its sysroot.

### Toolchain configuration options ###

config HOST_CLANG_STL_LIBRARY
	string "Host STL implementation"
	depends on HOST_TOOLCHAIN_CLANG
	default ""
	help
	  This is the C++ Standard Template Library to link against. This
	  should either be empty (use the default), "stdc++", or "c++".

	  Only set a value if the default standard library selected by
	  clang is incorrect for the host.

config HOST_CLANG_COMPILER_RUNTIME
	string "Host compiler runtime library"
	depends on HOST_TOOLCHAIN_CLANG
	help
	  This is the compiler runtime library to link against. This
	  should either be empty (use the default), "libgcc" or
	  "compiler-rt".

	  Only set a value if the default compiler runtime selected by
	  Clang is incorrect for the host.

config HOST_CLANG_USE_GNU_CRT
	bool "Host uses GNU toolchain's startup libraries"
	depends on HOST_TOOLCHAIN_CLANG
	help
	  Detect the location of the configured GNU toolchain's `crt1.o`
	  and pass this to Clang.

config HOST_CLANG_USE_GNU_STL
	bool "Host uses GNU toolchain's STL"
	depends on HOST_TOOLCHAIN_CLANG && HOST_CLANG_STL_LIBRARY = "stdc++"
	help
	  Detect the location of the configured GNU toolchain's STL
	  and pass this to Clang.

config HOST_CLANG_USE_GNU_LIBGCC
	bool "Host uses GNU toolchain's libgcc"
	depends on HOST_TOOLCHAIN_CLANG && HOST_CLANG_COMPILER_RUNTIME = "libgcc"
	help
	  Detect the location of the configured GNU toolchain's `libgcc.a`
	  and `libgcc_s.so` and pass this to Clang.

config HOST_CLANG_USE_GNU_BINUTILS
	bool "Host uses GNU toolchain's binutils"
	depends on HOST_TOOLCHAIN_CLANG
	help
	  Add the configured GNU toolchain's `bin/` directory to Clang's binary
	  search path, allowing it to use the linker and assembler.

config HOST_OBJCOPY_BINARY
	string "Host objcopy"
	default HOST_GNU_PREFIX + "objcopy" if HOST_TOOLCHAIN_GNU || (HOST_TOOLCHAIN_CLANG && HOST_CLANG_USE_GNU_BINUTILS)
	default "llvm-objcopy" if HOST_TOOLCHAIN_CLANG
	default "dsymutil" if HOST_TOOLCHAIN_XCODE
	default "objcopy"
	help
	  The objcopy executable that we can use in post install scripts
	  to manipulate host libraries and executables.
