name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  commit-check:
    name: Commit checks
    strategy:
      matrix:
        go: [ '1.13' ]
        os: [ ubuntu-latest ]
        python: [ '3.x' ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Setup Go ${{ matrix.go }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{matrix.go}}
        id: go

      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: 'true'

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/pip_requirements.txt

      - name: Run gofmt
        run: .github/checks/check-code-format.sh

      - name: Run pycodestyle
        run: .github/checks/check-pycodestyle.sh

      - name: Run pylint
        run: .github/checks/check-pylint.sh

      - name: Check copyright
        run: .github/checks/check-copyright.sh

      - name: Check signoff
        run: .github/checks/check-signoff.py

  go-tests:
    name: Go ${{ matrix.go }} tests ${{ matrix.os }}
    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: off
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}
    strategy:
      fail-fast: false
      matrix:
        go: [ '1.10', '1.11', '1.12', '1.13', '1.14' ]
        os: [ ubuntu-latest ]
        include:
          - go: '1.13'
            os: macos-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Setup Go ${{ matrix.go }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{matrix.go}}
        id: go

      - name: Get testify
        uses: actions/checkout@v2
        with:
          repository: stretchr/testify
          ref: v1.6.1
          path: ${{ env.GOPATH }}/src/github.com/stretchr/testify

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: 'true'
          path: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}

      - name: Setup testify dependencies
        run: |
          cd ${GOPATH}/src/github.com/stretchr/testify && go get -d ./...

      - name: Setup Go workspace
        run: |
          mkdir -p ${GOPATH}/src/github.com/google/
          ln -s ${GOPATH}/src/github.com/ARM-software/bob-build/blueprint ${GOPATH}/src/github.com/google/blueprint

      - name: Test
        run: .github/run_go_tests.sh

      - name: Run go vet
        run: go vet ./...

  python-tests:
    name: Python ${{ matrix.python }} tests ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: [ '2.7', '3.x' ]
        os: [ ubuntu-latest ]
        include:
          - python: '3.x'
            os: macos-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/pip_requirements.txt

      - name: config_system regression tests
        run: config_system/tests/run_tests.py

      - name: Mconfigfmt tests
        run: config_system/tests/run_tests_formatter.py

      - name: config_system pytest
        run: pytest config_system

      - name: scripts pytest
        run: pytest scripts/env_hash.py

  build-tests:
    name: Test ${{ matrix.os }}, Go ${{ matrix.go }}, Python ${{ matrix.python }}
    strategy:
      fail-fast: false
      matrix:
        go: [ '1.10', '1.11', '1.12', '1.13', '1.14' ]
        os: [ ubuntu-latest ]
        python: [ '3.x' ]
        include:
          - go: '1.11'
            os: ubuntu-latest
            python: '2.7'
          - go: '1.13'
            os: macos-latest
            python: '3.x'
    runs-on: ${{ matrix.os }}

    steps:
      - name: Setup Go ${{ matrix.go }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{matrix.go}}
        id: go

      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install tools
        run: |
          if [ "$RUNNER_OS" == "Linux" ] ; then
            sudo apt-get install ninja-build rsync
          elif [ "$RUNNER_OS" == "macOS" ] ; then
            brew install ninja rsync
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: 'true'

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/pip_requirements.txt

      - name: Relative path tests
        run: tests/relative_path_tests.sh

      - name: Build tests
        run: tests/build_tests.sh

      - name: Test example project
        run: .github/build_example_proj.sh

      - name: Bootstrap version test
        run: .github/run_bootstrap_test.sh
