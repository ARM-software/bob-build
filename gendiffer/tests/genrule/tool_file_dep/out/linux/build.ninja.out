# ******************************************************************************
# ***            This file is generated and should not be edited             ***
# ******************************************************************************
#
# This file contains variables, rules, and pools with name prefixes indicating
# they were generated by the following Go packages:
#
#     bob       [from Go package bob]
#     bootstrap [from Go package github.com/google/blueprint/bootstrap]
#
ninja_required_version = 1.7.0

g.bob.BuildDir = redacted

g.bob.SrcDir = redacted

g.bootstrap.BinDir = redacted/.bootstrap/bin

g.bootstrap.buildDir = redacted

g.bootstrap.ninjaBuildDir = redacted

# Limit the parallelization of linking, which is memory intensive
pool g.bob.link
    depth = 1

builddir = ${g.bootstrap.ninjaBuildDir}

rule g.bob.cxx
    command = ${build_wrapper} ${cxxcompiler} -c ${cflags} ${cxxflags} -MD -MF ${depfile} ${in} -o ${out}
    depfile = ${out}.d
    deps = gcc
    description = ${out}

rule g.bob.executable
    pool = g.bob.link
    command = ${build_wrapper} ${linker} ${in} -o ${out} ${ldflags} ${static_libs} -L${shared_libs_dir} ${shared_libs_flags} ${ldlibs}
    description = ${out}

rule g.bootstrap.cp
    command = cp ${in} ${out}
    description = cp ${out}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  generate_config
# Variant:
# Type:    bob_genrule
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

rule m.generate_config_.gen_generate_config
    command = python ${tool_1} --in ${in} --out ${_out_} --expect-in before_generate.in
    description = ${out}
    restat = true

build ${g.bob.BuildDir}/gen/generate_config/generated.json: $
        m.generate_config_.gen_generate_config $
        ${g.bob.SrcDir}/before_generate.in | ${g.bob.SrcDir}/generator.py
    _out_ = ${g.bob.BuildDir}/gen/generate_config/generated.json
    tool_1 = ${g.bob.SrcDir}/generator.py

build generate_config: phony $
        ${g.bob.BuildDir}/gen/generate_config/generated.json

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  generate_source_colon_dep
# Variant:
# Type:    bob_genrule
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

rule m.generate_source_colon_dep_.gen_generate_source_colon_dep
    command = python ${tool_1} --in ${in} --json ${tool_2} --out ${_out_} --expect-in before_generate.in
    description = ${out}
    restat = true

build ${g.bob.BuildDir}/gen/generate_source_colon_dep/out1.cpp $
        ${g.bob.BuildDir}/gen/generate_source_colon_dep/out2.cpp: $
        m.generate_source_colon_dep_.gen_generate_source_colon_dep $
        ${g.bob.SrcDir}/before_generate.in | $
        ${g.bob.BuildDir}/gen/generate_config/generated.json $
        ${g.bob.SrcDir}/generator.py
    _out_ = ${g.bob.BuildDir}/gen/generate_source_colon_dep/out1.cpp ${g.bob.BuildDir}/gen/generate_source_colon_dep/out2.cpp
    tool_1 = ${g.bob.SrcDir}/generator.py
    tool_2 = ${g.bob.BuildDir}/gen/generate_config/generated.json

build generate_source_colon_dep: phony $
        ${g.bob.BuildDir}/gen/generate_source_colon_dep/out1.cpp $
        ${g.bob.BuildDir}/gen/generate_source_colon_dep/out2.cpp

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  generate_source_multiple_colon_dep
# Variant:
# Type:    bob_genrule
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

rule m.generate_source_multiple_colon_dep_.gen_generate_source_multiple_colon_dep
    command = python ${tool_1} --in ${in} --tools ${tool_2} --out ${_out_} --expect-in before_generate.in
    description = ${out}
    restat = true

build ${g.bob.BuildDir}/gen/generate_source_multiple_colon_dep/out5.cpp $
        ${g.bob.BuildDir}/gen/generate_source_multiple_colon_dep/out6.cpp: $
        m.generate_source_multiple_colon_dep_.gen_generate_source_multiple_colon_dep $
        ${g.bob.SrcDir}/before_generate.in | $
        ${g.bob.BuildDir}/gen/generate_source_colon_dep/out1.cpp $
        ${g.bob.BuildDir}/gen/generate_source_colon_dep/out2.cpp $
        ${g.bob.SrcDir}/generator.py
    _out_ = ${g.bob.BuildDir}/gen/generate_source_multiple_colon_dep/out5.cpp ${g.bob.BuildDir}/gen/generate_source_multiple_colon_dep/out6.cpp
    tool_1 = ${g.bob.SrcDir}/generator.py
    tool_2 = ${g.bob.BuildDir}/gen/generate_source_colon_dep/out1.cpp ${g.bob.BuildDir}/gen/generate_source_colon_dep/out2.cpp

build generate_source_multiple_colon_dep: phony $
        ${g.bob.BuildDir}/gen/generate_source_multiple_colon_dep/out5.cpp $
        ${g.bob.BuildDir}/gen/generate_source_multiple_colon_dep/out6.cpp

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  generate_source_out_dep
# Variant:
# Type:    bob_genrule
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

rule m.generate_source_out_dep_.gen_generate_source_out_dep
    command = python ${tool_1} --in ${in} --json ${generate_config_out} --out ${_out_} --expect-in before_generate.in
    description = ${out}
    restat = true

build ${g.bob.BuildDir}/gen/generate_source_out_dep/out3.cpp $
        ${g.bob.BuildDir}/gen/generate_source_out_dep/out4.cpp: $
        m.generate_source_out_dep_.gen_generate_source_out_dep $
        ${g.bob.SrcDir}/before_generate.in | $
        ${g.bob.BuildDir}/gen/generate_config/generated.json $
        ${g.bob.SrcDir}/generator.py
    _out_ = ${g.bob.BuildDir}/gen/generate_source_out_dep/out3.cpp ${g.bob.BuildDir}/gen/generate_source_out_dep/out4.cpp
    generate_config_out = ${g.bob.BuildDir}/gen/generate_config/generated.json
    tool_1 = ${g.bob.SrcDir}/generator.py

build generate_source_out_dep: phony $
        ${g.bob.BuildDir}/gen/generate_source_out_dep/out3.cpp $
        ${g.bob.BuildDir}/gen/generate_source_out_dep/out4.cpp

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  validate_link_generate_sources_new
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.validate_link_generate_sources_new_target.cflags = 
m.validate_link_generate_sources_new_target.cxxflags = 

build $
        ${g.bob.BuildDir}/target/objects/validate_link_generate_sources_new/main.cpp.o $
        : g.bob.cxx ${g.bob.SrcDir}/main.cpp
    build_wrapper = 
    cflags = ${m.validate_link_generate_sources_new_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.validate_link_generate_sources_new_target.cxxflags}

build $
        ${g.bob.BuildDir}/target/objects/validate_link_generate_sources_new/gen/generate_source_colon_dep/out1.cpp.o $
        : g.bob.cxx ${g.bob.BuildDir}/gen/generate_source_colon_dep/out1.cpp
    build_wrapper = 
    cflags = ${m.validate_link_generate_sources_new_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.validate_link_generate_sources_new_target.cxxflags}

build $
        ${g.bob.BuildDir}/target/objects/validate_link_generate_sources_new/gen/generate_source_colon_dep/out2.cpp.o $
        : g.bob.cxx ${g.bob.BuildDir}/gen/generate_source_colon_dep/out2.cpp
    build_wrapper = 
    cflags = ${m.validate_link_generate_sources_new_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.validate_link_generate_sources_new_target.cxxflags}

build $
        ${g.bob.BuildDir}/target/objects/validate_link_generate_sources_new/gen/generate_source_out_dep/out3.cpp.o $
        : g.bob.cxx ${g.bob.BuildDir}/gen/generate_source_out_dep/out3.cpp
    build_wrapper = 
    cflags = ${m.validate_link_generate_sources_new_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.validate_link_generate_sources_new_target.cxxflags}

build $
        ${g.bob.BuildDir}/target/objects/validate_link_generate_sources_new/gen/generate_source_out_dep/out4.cpp.o $
        : g.bob.cxx ${g.bob.BuildDir}/gen/generate_source_out_dep/out4.cpp
    build_wrapper = 
    cflags = ${m.validate_link_generate_sources_new_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.validate_link_generate_sources_new_target.cxxflags}

build $
        ${g.bob.BuildDir}/target/objects/validate_link_generate_sources_new/gen/generate_source_multiple_colon_dep/out5.cpp.o $
        : g.bob.cxx $
        ${g.bob.BuildDir}/gen/generate_source_multiple_colon_dep/out5.cpp
    build_wrapper = 
    cflags = ${m.validate_link_generate_sources_new_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.validate_link_generate_sources_new_target.cxxflags}

build $
        ${g.bob.BuildDir}/target/objects/validate_link_generate_sources_new/gen/generate_source_multiple_colon_dep/out6.cpp.o $
        : g.bob.cxx $
        ${g.bob.BuildDir}/gen/generate_source_multiple_colon_dep/out6.cpp
    build_wrapper = 
    cflags = ${m.validate_link_generate_sources_new_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.validate_link_generate_sources_new_target.cxxflags}

build ${g.bob.BuildDir}/target/executable/validate_link_generate_sources_new: $
        g.bob.executable $
        ${g.bob.BuildDir}/target/objects/validate_link_generate_sources_new/main.cpp.o $
        ${g.bob.BuildDir}/target/objects/validate_link_generate_sources_new/gen/generate_source_colon_dep/out1.cpp.o $
        ${g.bob.BuildDir}/target/objects/validate_link_generate_sources_new/gen/generate_source_colon_dep/out2.cpp.o $
        ${g.bob.BuildDir}/target/objects/validate_link_generate_sources_new/gen/generate_source_out_dep/out3.cpp.o $
        ${g.bob.BuildDir}/target/objects/validate_link_generate_sources_new/gen/generate_source_out_dep/out4.cpp.o $
        ${g.bob.BuildDir}/target/objects/validate_link_generate_sources_new/gen/generate_source_multiple_colon_dep/out5.cpp.o $
        ${g.bob.BuildDir}/target/objects/validate_link_generate_sources_new/gen/generate_source_multiple_colon_dep/out6.cpp.o
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = 

build validate_link_generate_sources_new: phony $
        ${g.bob.BuildDir}/target/executable/validate_link_generate_sources_new
default validate_link_generate_sources_new

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Singleton: bootstrap
# Factory:   github.com/google/blueprint/bootstrap.Main.newSingletonFactory.func4

build ${g.bootstrap.buildDir}/bin/minibp: g.bootstrap.cp $
        ${g.bootstrap.BinDir}/minibp

build blueprint_tools: phony

