# ******************************************************************************
# ***            This file is generated and should not be edited             ***
# ******************************************************************************
#
# This file contains variables, rules, and pools with name prefixes indicating
# they were generated by the following Go packages:
#
#     bob       [from Go package bob]
#     bootstrap [from Go package github.com/google/blueprint/bootstrap]
#
ninja_required_version = 1.7.0

g.bob.BobScriptsDir = redacted/scripts

g.bob.BuildDir = redacted

g.bob.SrcDir = redacted

g.bob.whole_static_tool = ${g.bob.BobScriptsDir}/whole_static.py

g.bootstrap.BinDir = redacted/.bootstrap/bin

g.bootstrap.buildDir = redacted

g.bootstrap.ninjaBuildDir = redacted

# Limit the parallelization of linking, which is memory intensive
pool g.bob.link
    depth = 1

builddir = ${g.bootstrap.ninjaBuildDir}

rule g.bob.cxx
    command = ${build_wrapper} ${cxxcompiler} -c ${cflags} ${cxxflags} -MD -MF ${depfile} ${in} -o ${out}
    depfile = ${out}.d
    deps = gcc
    description = ${out}

rule g.bob.executable
    pool = g.bob.link
    command = ${build_wrapper} ${linker} ${in} -o ${out} ${ldflags} ${static_libs} -L${shared_libs_dir} ${shared_libs_flags} ${ldlibs}
    description = ${out}

rule g.bob.static_library
    command = rm -f ${out} && ${build_wrapper} ${ar} -rcs ${out} ${in}
    description = ${out}

rule g.bob.whole_static_library
    command = ${g.bob.whole_static_tool} --build-wrapper "${build_wrapper}" --ar ${ar} --out ${out} ${in} ${whole_static_libs}
    description = ${out}

rule g.bootstrap.cp
    command = cp ${in} ${out}
    description = cp ${out}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_a
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_a_target.cflags = -DHAVE_A -DHAVE_B -DHAVE_C -DHAVE_D -DHAVE_E
m.lib_a_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/lib_a/passing/a.cpp.o: g.bob.cxx $
        ${g.bob.SrcDir}/passing/a.cpp
    build_wrapper = 
    cflags = ${m.lib_a_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_a_target.cxxflags}

build ${g.bob.BuildDir}/target/static/lib_a.a: g.bob.whole_static_library $
        ${g.bob.BuildDir}/target/objects/lib_a/passing/a.cpp.o | $
        ${g.bob.whole_static_tool} ${g.bob.BuildDir}/target/static/lib_b.a $
        ${g.bob.BuildDir}/target/static/lib_c.a
    ar = ar
    build_wrapper = 
    whole_static_libs = ${g.bob.BuildDir}/target/static/lib_b.a ${g.bob.BuildDir}/target/static/lib_c.a

build lib_a: phony ${g.bob.BuildDir}/target/static/lib_a.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_b
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_b_target.cflags = -DHAVE_B -DHAVE_D
m.lib_b_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/lib_b/passing/b.cpp.o: g.bob.cxx $
        ${g.bob.SrcDir}/passing/b.cpp
    build_wrapper = 
    cflags = ${m.lib_b_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_b_target.cxxflags}

build ${g.bob.BuildDir}/target/static/lib_b.a: g.bob.whole_static_library $
        ${g.bob.BuildDir}/target/objects/lib_b/passing/b.cpp.o | $
        ${g.bob.whole_static_tool} ${g.bob.BuildDir}/target/static/lib_d.a
    ar = ar
    build_wrapper = 
    whole_static_libs = ${g.bob.BuildDir}/target/static/lib_d.a

build lib_b: phony ${g.bob.BuildDir}/target/static/lib_b.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_c
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_c_target.cflags = -DHAVE_C -DHAVE_E
m.lib_c_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/lib_c/passing/c.cpp.o: g.bob.cxx $
        ${g.bob.SrcDir}/passing/c.cpp
    build_wrapper = 
    cflags = ${m.lib_c_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_c_target.cxxflags}

build ${g.bob.BuildDir}/target/static/lib_c.a: g.bob.whole_static_library $
        ${g.bob.BuildDir}/target/objects/lib_c/passing/c.cpp.o | $
        ${g.bob.whole_static_tool} ${g.bob.BuildDir}/target/static/lib_e.a
    ar = ar
    build_wrapper = 
    whole_static_libs = ${g.bob.BuildDir}/target/static/lib_e.a

build lib_c: phony ${g.bob.BuildDir}/target/static/lib_c.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_d
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_d_target.cflags = -DHAVE_D
m.lib_d_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/lib_d/passing/d.cpp.o: g.bob.cxx $
        ${g.bob.SrcDir}/passing/d.cpp
    build_wrapper = 
    cflags = ${m.lib_d_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_d_target.cxxflags}

build ${g.bob.BuildDir}/target/static/lib_d.a: g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/lib_d/passing/d.cpp.o
    ar = ar
    build_wrapper = 

build lib_d: phony ${g.bob.BuildDir}/target/static/lib_d.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_e
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_e_target.cflags = -DHAVE_E
m.lib_e_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/lib_e/passing/e.cpp.o: g.bob.cxx $
        ${g.bob.SrcDir}/passing/e.cpp
    build_wrapper = 
    cflags = ${m.lib_e_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_e_target.cxxflags}

build ${g.bob.BuildDir}/target/static/lib_e.a: g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/lib_e/passing/e.cpp.o
    ar = ar
    build_wrapper = 

build lib_e: phony ${g.bob.BuildDir}/target/static/lib_e.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_internal
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_internal_target.cflags = -DSHOW_HIDDEN -I${g.bob.SrcDir}/hidden
m.lib_internal_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/lib_internal/hidden/hidden.cpp.o: $
        g.bob.cxx ${g.bob.SrcDir}/hidden/hidden.cpp
    build_wrapper = 
    cflags = ${m.lib_internal_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_internal_target.cxxflags}

build ${g.bob.BuildDir}/target/static/lib_internal.a: g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/lib_internal/hidden/hidden.cpp.o
    ar = ar
    build_wrapper = 

build lib_internal: phony ${g.bob.BuildDir}/target/static/lib_internal.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_internal_host
# Variant: host
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_internal_host_host.cflags = -DSHOW_HIDDEN -DME_HOST -I${g.bob.SrcDir}/hidden
m.lib_internal_host_host.cxxflags = 

build ${g.bob.BuildDir}/host/objects/lib_internal_host/hidden/hidden.cpp.o: $
        g.bob.cxx ${g.bob.SrcDir}/hidden/hidden.cpp
    build_wrapper = 
    cflags = ${m.lib_internal_host_host.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_internal_host_host.cxxflags}

build ${g.bob.BuildDir}/host/static/lib_internal_host.a: g.bob.static_library $
        ${g.bob.BuildDir}/host/objects/lib_internal_host/hidden/hidden.cpp.o
    ar = ar
    build_wrapper = 

build lib_internal_host__host: phony $
        ${g.bob.BuildDir}/host/static/lib_internal_host.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_internal_host
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_internal_host_target.cflags = -DSHOW_HIDDEN -DME_HOST -I${g.bob.SrcDir}/hidden
m.lib_internal_host_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/lib_internal_host/hidden/hidden.cpp.o: $
        g.bob.cxx ${g.bob.SrcDir}/hidden/hidden.cpp
    build_wrapper = 
    cflags = ${m.lib_internal_host_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_internal_host_target.cxxflags}

build ${g.bob.BuildDir}/target/static/lib_internal_host.a: $
        g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/lib_internal_host/hidden/hidden.cpp.o
    ar = ar
    build_wrapper = 

build lib_internal_host__target: phony $
        ${g.bob.BuildDir}/target/static/lib_internal_host.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_internal_target
# Variant: host
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_internal_target_host.cflags = -DSHOW_HIDDEN -DME_TARGET -I${g.bob.SrcDir}/hidden
m.lib_internal_target_host.cxxflags = 

build ${g.bob.BuildDir}/host/objects/lib_internal_target/hidden/hidden.cpp.o: $
        g.bob.cxx ${g.bob.SrcDir}/hidden/hidden.cpp
    build_wrapper = 
    cflags = ${m.lib_internal_target_host.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_internal_target_host.cxxflags}

build ${g.bob.BuildDir}/host/static/lib_internal_target.a: $
        g.bob.static_library $
        ${g.bob.BuildDir}/host/objects/lib_internal_target/hidden/hidden.cpp.o
    ar = ar
    build_wrapper = 

build lib_internal_target__host: phony $
        ${g.bob.BuildDir}/host/static/lib_internal_target.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_internal_target
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_internal_target_target.cflags = -DSHOW_HIDDEN -DME_TARGET -I${g.bob.SrcDir}/hidden
m.lib_internal_target_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/lib_internal_target/hidden/hidden.cpp.o $
        : g.bob.cxx ${g.bob.SrcDir}/hidden/hidden.cpp
    build_wrapper = 
    cflags = ${m.lib_internal_target_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_internal_target_target.cxxflags}

build ${g.bob.BuildDir}/target/static/lib_internal_target.a: $
        g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/lib_internal_target/hidden/hidden.cpp.o
    ar = ar
    build_wrapper = 

build lib_internal_target__target: phony $
        ${g.bob.BuildDir}/target/static/lib_internal_target.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_no_reexport
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_no_reexport_target.cflags = -DSHOW_HIDDEN -I${g.bob.SrcDir}/hidden
m.lib_no_reexport_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/lib_no_reexport/export.cpp.o: g.bob.cxx $
        ${g.bob.SrcDir}/export.cpp
    build_wrapper = 
    cflags = ${m.lib_no_reexport_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_no_reexport_target.cxxflags}

build ${g.bob.BuildDir}/target/static/lib_no_reexport.a: $
        g.bob.whole_static_library $
        ${g.bob.BuildDir}/target/objects/lib_no_reexport/export.cpp.o | $
        ${g.bob.whole_static_tool} $
        ${g.bob.BuildDir}/target/static/lib_internal.a
    ar = ar
    build_wrapper = 
    whole_static_libs = ${g.bob.BuildDir}/target/static/lib_internal.a

build lib_no_reexport: phony ${g.bob.BuildDir}/target/static/lib_no_reexport.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_reexport_host
# Variant: host
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_reexport_host_host.cflags = -DSHOW_HIDDEN -DME_HOST -I${g.bob.SrcDir}/hidden
m.lib_reexport_host_host.cxxflags = 

build ${g.bob.BuildDir}/host/objects/lib_reexport_host/export.cpp.o: g.bob.cxx $
        ${g.bob.SrcDir}/export.cpp
    build_wrapper = 
    cflags = ${m.lib_reexport_host_host.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_reexport_host_host.cxxflags}

build ${g.bob.BuildDir}/host/static/lib_reexport_host.a: $
        g.bob.whole_static_library $
        ${g.bob.BuildDir}/host/objects/lib_reexport_host/export.cpp.o | $
        ${g.bob.whole_static_tool} $
        ${g.bob.BuildDir}/host/static/lib_internal_host.a
    ar = ar
    build_wrapper = 
    whole_static_libs = ${g.bob.BuildDir}/host/static/lib_internal_host.a

build lib_reexport_host__host: phony $
        ${g.bob.BuildDir}/host/static/lib_reexport_host.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_reexport_host
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_reexport_host_target.cflags = -DSHOW_HIDDEN -DME_HOST -I${g.bob.SrcDir}/hidden
m.lib_reexport_host_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/lib_reexport_host/export.cpp.o: $
        g.bob.cxx ${g.bob.SrcDir}/export.cpp
    build_wrapper = 
    cflags = ${m.lib_reexport_host_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_reexport_host_target.cxxflags}

build ${g.bob.BuildDir}/target/static/lib_reexport_host.a: $
        g.bob.whole_static_library $
        ${g.bob.BuildDir}/target/objects/lib_reexport_host/export.cpp.o | $
        ${g.bob.whole_static_tool} $
        ${g.bob.BuildDir}/target/static/lib_internal_host.a
    ar = ar
    build_wrapper = 
    whole_static_libs = ${g.bob.BuildDir}/target/static/lib_internal_host.a

build lib_reexport_host__target: phony $
        ${g.bob.BuildDir}/target/static/lib_reexport_host.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_reexport_host_2
# Variant: host
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_reexport_host_2_host.cflags = -DSHOW_HIDDEN -DME_HOST -I${g.bob.SrcDir}/hidden
m.lib_reexport_host_2_host.cxxflags = 

build ${g.bob.BuildDir}/host/objects/lib_reexport_host_2/export.cpp.o: $
        g.bob.cxx ${g.bob.SrcDir}/export.cpp
    build_wrapper = 
    cflags = ${m.lib_reexport_host_2_host.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_reexport_host_2_host.cxxflags}

build ${g.bob.BuildDir}/host/static/lib_reexport_host_2.a: $
        g.bob.whole_static_library $
        ${g.bob.BuildDir}/host/objects/lib_reexport_host_2/export.cpp.o | $
        ${g.bob.whole_static_tool} $
        ${g.bob.BuildDir}/host/static/lib_internal_host.a
    ar = ar
    build_wrapper = 
    whole_static_libs = ${g.bob.BuildDir}/host/static/lib_internal_host.a

build lib_reexport_host_2__host: phony $
        ${g.bob.BuildDir}/host/static/lib_reexport_host_2.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_reexport_host_2
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_reexport_host_2_target.cflags = -DSHOW_HIDDEN -DME_TARGET -I${g.bob.SrcDir}/hidden
m.lib_reexport_host_2_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/lib_reexport_host_2/export.cpp.o: $
        g.bob.cxx ${g.bob.SrcDir}/export.cpp
    build_wrapper = 
    cflags = ${m.lib_reexport_host_2_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_reexport_host_2_target.cxxflags}

build ${g.bob.BuildDir}/target/static/lib_reexport_host_2.a: $
        g.bob.whole_static_library $
        ${g.bob.BuildDir}/target/objects/lib_reexport_host_2/export.cpp.o | $
        ${g.bob.whole_static_tool} $
        ${g.bob.BuildDir}/target/static/lib_internal_target.a
    ar = ar
    build_wrapper = 
    whole_static_libs = ${g.bob.BuildDir}/target/static/lib_internal_target.a

build lib_reexport_host_2__target: phony $
        ${g.bob.BuildDir}/target/static/lib_reexport_host_2.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_reexport_level_1
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_reexport_level_1_target.cflags = -DSHOW_HIDDEN -I${g.bob.SrcDir}/hidden
m.lib_reexport_level_1_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/lib_reexport_level_1/export.cpp.o: $
        g.bob.cxx ${g.bob.SrcDir}/export.cpp
    build_wrapper = 
    cflags = ${m.lib_reexport_level_1_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_reexport_level_1_target.cxxflags}

build ${g.bob.BuildDir}/target/static/lib_reexport_level_1.a: $
        g.bob.whole_static_library $
        ${g.bob.BuildDir}/target/objects/lib_reexport_level_1/export.cpp.o | $
        ${g.bob.whole_static_tool} $
        ${g.bob.BuildDir}/target/static/lib_internal.a
    ar = ar
    build_wrapper = 
    whole_static_libs = ${g.bob.BuildDir}/target/static/lib_internal.a

build lib_reexport_level_1: phony $
        ${g.bob.BuildDir}/target/static/lib_reexport_level_1.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_reexport_level_2
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_reexport_level_2_target.cflags = -DSHOW_HIDDEN -I${g.bob.SrcDir}/hidden
m.lib_reexport_level_2_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/lib_reexport_level_2/export_2.cpp.o: $
        g.bob.cxx ${g.bob.SrcDir}/export_2.cpp
    build_wrapper = 
    cflags = ${m.lib_reexport_level_2_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_reexport_level_2_target.cxxflags}

build ${g.bob.BuildDir}/target/static/lib_reexport_level_2.a: $
        g.bob.whole_static_library $
        ${g.bob.BuildDir}/target/objects/lib_reexport_level_2/export_2.cpp.o | $
        ${g.bob.whole_static_tool} $
        ${g.bob.BuildDir}/target/static/lib_reexport_level_1.a
    ar = ar
    build_wrapper = 
    whole_static_libs = ${g.bob.BuildDir}/target/static/lib_reexport_level_1.a

build lib_reexport_level_2: phony $
        ${g.bob.BuildDir}/target/static/lib_reexport_level_2.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_reexport_level_3
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_reexport_level_3_target.cflags = -DSHOW_HIDDEN -I${g.bob.SrcDir}/hidden
m.lib_reexport_level_3_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/lib_reexport_level_3/export_3.cpp.o: $
        g.bob.cxx ${g.bob.SrcDir}/export_3.cpp
    build_wrapper = 
    cflags = ${m.lib_reexport_level_3_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_reexport_level_3_target.cxxflags}

build ${g.bob.BuildDir}/target/static/lib_reexport_level_3.a: $
        g.bob.whole_static_library $
        ${g.bob.BuildDir}/target/objects/lib_reexport_level_3/export_3.cpp.o | $
        ${g.bob.whole_static_tool} $
        ${g.bob.BuildDir}/target/static/lib_reexport_level_2.a
    ar = ar
    build_wrapper = 
    whole_static_libs = ${g.bob.BuildDir}/target/static/lib_reexport_level_2.a

build lib_reexport_level_3: phony $
        ${g.bob.BuildDir}/target/static/lib_reexport_level_3.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  test_no_reexport
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.test_no_reexport_target.cflags = 
m.test_no_reexport_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/test_no_reexport/main_no_reexport.cpp.o $
        : g.bob.cxx ${g.bob.SrcDir}/main_no_reexport.cpp
    build_wrapper = 
    cflags = ${m.test_no_reexport_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.test_no_reexport_target.cxxflags}

build ${g.bob.BuildDir}/target/executable/test_no_reexport: g.bob.executable $
        ${g.bob.BuildDir}/target/objects/test_no_reexport/main_no_reexport.cpp.o $
        | ${g.bob.BuildDir}/target/static/lib_no_reexport.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = ${g.bob.BuildDir}/target/static/lib_no_reexport.a

build test_no_reexport: phony $
        ${g.bob.BuildDir}/target/executable/test_no_reexport
default test_no_reexport

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  test_reexport_cflags_level_1
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.test_reexport_cflags_level_1_target.cflags = -DSHOW_HIDDEN -I${g.bob.SrcDir}/hidden
m.test_reexport_cflags_level_1_target.cxxflags = 

build $
        ${g.bob.BuildDir}/target/objects/test_reexport_cflags_level_1/main_cflags.cpp.o $
        : g.bob.cxx ${g.bob.SrcDir}/main_cflags.cpp
    build_wrapper = 
    cflags = ${m.test_reexport_cflags_level_1_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.test_reexport_cflags_level_1_target.cxxflags}

build ${g.bob.BuildDir}/target/executable/test_reexport_cflags_level_1: $
        g.bob.executable $
        ${g.bob.BuildDir}/target/objects/test_reexport_cflags_level_1/main_cflags.cpp.o $
        | ${g.bob.BuildDir}/target/static/lib_reexport_level_1.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = ${g.bob.BuildDir}/target/static/lib_reexport_level_1.a

build test_reexport_cflags_level_1: phony $
        ${g.bob.BuildDir}/target/executable/test_reexport_cflags_level_1
default test_reexport_cflags_level_1

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  test_reexport_cflags_level_2
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.test_reexport_cflags_level_2_target.cflags = -DSHOW_HIDDEN -I${g.bob.SrcDir}/hidden
m.test_reexport_cflags_level_2_target.cxxflags = 

build $
        ${g.bob.BuildDir}/target/objects/test_reexport_cflags_level_2/main_cflags.cpp.o $
        : g.bob.cxx ${g.bob.SrcDir}/main_cflags.cpp
    build_wrapper = 
    cflags = ${m.test_reexport_cflags_level_2_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.test_reexport_cflags_level_2_target.cxxflags}

build ${g.bob.BuildDir}/target/executable/test_reexport_cflags_level_2: $
        g.bob.executable $
        ${g.bob.BuildDir}/target/objects/test_reexport_cflags_level_2/main_cflags.cpp.o $
        | ${g.bob.BuildDir}/target/static/lib_reexport_level_2.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = ${g.bob.BuildDir}/target/static/lib_reexport_level_2.a

build test_reexport_cflags_level_2: phony $
        ${g.bob.BuildDir}/target/executable/test_reexport_cflags_level_2
default test_reexport_cflags_level_2

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  test_reexport_cflags_level_3
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.test_reexport_cflags_level_3_target.cflags = -DSHOW_HIDDEN -I${g.bob.SrcDir}/hidden
m.test_reexport_cflags_level_3_target.cxxflags = 

build $
        ${g.bob.BuildDir}/target/objects/test_reexport_cflags_level_3/main_cflags.cpp.o $
        : g.bob.cxx ${g.bob.SrcDir}/main_cflags.cpp
    build_wrapper = 
    cflags = ${m.test_reexport_cflags_level_3_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.test_reexport_cflags_level_3_target.cxxflags}

build ${g.bob.BuildDir}/target/executable/test_reexport_cflags_level_3: $
        g.bob.executable $
        ${g.bob.BuildDir}/target/objects/test_reexport_cflags_level_3/main_cflags.cpp.o $
        | ${g.bob.BuildDir}/target/static/lib_reexport_level_3.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = ${g.bob.BuildDir}/target/static/lib_reexport_level_3.a

build test_reexport_cflags_level_3: phony $
        ${g.bob.BuildDir}/target/executable/test_reexport_cflags_level_3
default test_reexport_cflags_level_3

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  test_reexport_host
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.test_reexport_host_target.cflags = -DSHOW_HIDDEN -DME_HOST -I${g.bob.SrcDir}/hidden
m.test_reexport_host_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/test_reexport_host/main_cflags.cpp.o: $
        g.bob.cxx ${g.bob.SrcDir}/main_cflags.cpp
    build_wrapper = 
    cflags = ${m.test_reexport_host_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.test_reexport_host_target.cxxflags}

build ${g.bob.BuildDir}/target/executable/test_reexport_host: g.bob.executable $
        ${g.bob.BuildDir}/target/objects/test_reexport_host/main_cflags.cpp.o $
        | ${g.bob.BuildDir}/target/static/lib_reexport_host.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = ${g.bob.BuildDir}/target/static/lib_reexport_host.a

build test_reexport_host: phony $
        ${g.bob.BuildDir}/target/executable/test_reexport_host
default test_reexport_host

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  test_reexport_host_2
# Variant: host
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.test_reexport_host_2_host.cflags = -DSHOW_HIDDEN -DME_HOST -I${g.bob.SrcDir}/hidden
m.test_reexport_host_2_host.cxxflags = 

build ${g.bob.BuildDir}/host/objects/test_reexport_host_2/main_cflags.cpp.o: $
        g.bob.cxx ${g.bob.SrcDir}/main_cflags.cpp
    build_wrapper = 
    cflags = ${m.test_reexport_host_2_host.cflags}
    cxxcompiler = g++
    cxxflags = ${m.test_reexport_host_2_host.cxxflags}

build ${g.bob.BuildDir}/host/executable/test_reexport_host_2: g.bob.executable $
        ${g.bob.BuildDir}/host/objects/test_reexport_host_2/main_cflags.cpp.o $
        | ${g.bob.BuildDir}/host/static/lib_reexport_host_2.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/host/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/host/shared
    static_libs = ${g.bob.BuildDir}/host/static/lib_reexport_host_2.a

build test_reexport_host_2__host: phony $
        ${g.bob.BuildDir}/host/executable/test_reexport_host_2

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  test_reexport_host_2
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.test_reexport_host_2_target.cflags = -DSHOW_HIDDEN -DME_TARGET -I${g.bob.SrcDir}/hidden
m.test_reexport_host_2_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/test_reexport_host_2/main_cflags.cpp.o: $
        g.bob.cxx ${g.bob.SrcDir}/main_cflags.cpp
    build_wrapper = 
    cflags = ${m.test_reexport_host_2_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.test_reexport_host_2_target.cxxflags}

build ${g.bob.BuildDir}/target/executable/test_reexport_host_2: $
        g.bob.executable $
        ${g.bob.BuildDir}/target/objects/test_reexport_host_2/main_cflags.cpp.o $
        | ${g.bob.BuildDir}/target/static/lib_reexport_host_2.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = ${g.bob.BuildDir}/target/static/lib_reexport_host_2.a

build test_reexport_host_2__target: phony $
        ${g.bob.BuildDir}/target/executable/test_reexport_host_2
default test_reexport_host_2__target

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  test_reexport_include_level_1
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.test_reexport_include_level_1_target.cflags = -DSHOW_HIDDEN -I${g.bob.SrcDir}/hidden
m.test_reexport_include_level_1_target.cxxflags = 

build $
        ${g.bob.BuildDir}/target/objects/test_reexport_include_level_1/main_include.cpp.o $
        : g.bob.cxx ${g.bob.SrcDir}/main_include.cpp
    build_wrapper = 
    cflags = ${m.test_reexport_include_level_1_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.test_reexport_include_level_1_target.cxxflags}

build ${g.bob.BuildDir}/target/executable/test_reexport_include_level_1: $
        g.bob.executable $
        ${g.bob.BuildDir}/target/objects/test_reexport_include_level_1/main_include.cpp.o $
        | ${g.bob.BuildDir}/target/static/lib_reexport_level_1.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = ${g.bob.BuildDir}/target/static/lib_reexport_level_1.a

build test_reexport_include_level_1: phony $
        ${g.bob.BuildDir}/target/executable/test_reexport_include_level_1
default test_reexport_include_level_1

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  test_reexport_include_level_2
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.test_reexport_include_level_2_target.cflags = -DSHOW_HIDDEN -I${g.bob.SrcDir}/hidden
m.test_reexport_include_level_2_target.cxxflags = 

build $
        ${g.bob.BuildDir}/target/objects/test_reexport_include_level_2/main_include.cpp.o $
        : g.bob.cxx ${g.bob.SrcDir}/main_include.cpp
    build_wrapper = 
    cflags = ${m.test_reexport_include_level_2_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.test_reexport_include_level_2_target.cxxflags}

build ${g.bob.BuildDir}/target/executable/test_reexport_include_level_2: $
        g.bob.executable $
        ${g.bob.BuildDir}/target/objects/test_reexport_include_level_2/main_include.cpp.o $
        | ${g.bob.BuildDir}/target/static/lib_reexport_level_2.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = ${g.bob.BuildDir}/target/static/lib_reexport_level_2.a

build test_reexport_include_level_2: phony $
        ${g.bob.BuildDir}/target/executable/test_reexport_include_level_2
default test_reexport_include_level_2

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  test_reexport_include_level_3
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.test_reexport_include_level_3_target.cflags = -DSHOW_HIDDEN -I${g.bob.SrcDir}/hidden
m.test_reexport_include_level_3_target.cxxflags = 

build $
        ${g.bob.BuildDir}/target/objects/test_reexport_include_level_3/main_include.cpp.o $
        : g.bob.cxx ${g.bob.SrcDir}/main_include.cpp
    build_wrapper = 
    cflags = ${m.test_reexport_include_level_3_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.test_reexport_include_level_3_target.cxxflags}

build ${g.bob.BuildDir}/target/executable/test_reexport_include_level_3: $
        g.bob.executable $
        ${g.bob.BuildDir}/target/objects/test_reexport_include_level_3/main_include.cpp.o $
        | ${g.bob.BuildDir}/target/static/lib_reexport_level_3.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = ${g.bob.BuildDir}/target/static/lib_reexport_level_3.a

build test_reexport_include_level_3: phony $
        ${g.bob.BuildDir}/target/executable/test_reexport_include_level_3
default test_reexport_include_level_3

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  test_reexport_passing_up
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.test_reexport_passing_up_target.cflags = -DHAVE_A -DHAVE_B -DHAVE_D
m.test_reexport_passing_up_target.cxxflags = 

build $
        ${g.bob.BuildDir}/target/objects/test_reexport_passing_up/passing/main.cpp.o $
        : g.bob.cxx ${g.bob.SrcDir}/passing/main.cpp
    build_wrapper = 
    cflags = ${m.test_reexport_passing_up_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.test_reexport_passing_up_target.cxxflags}

build ${g.bob.BuildDir}/target/executable/test_reexport_passing_up: $
        g.bob.executable $
        ${g.bob.BuildDir}/target/objects/test_reexport_passing_up/passing/main.cpp.o $
        | ${g.bob.BuildDir}/target/static/lib_a.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = ${g.bob.BuildDir}/target/static/lib_a.a

build test_reexport_passing_up: phony $
        ${g.bob.BuildDir}/target/executable/test_reexport_passing_up
default test_reexport_passing_up

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Singleton: bootstrap
# Factory:   github.com/google/blueprint/bootstrap.Main.newSingletonFactory.func4

build ${g.bootstrap.buildDir}/bin/minibp: g.bootstrap.cp $
        ${g.bootstrap.BinDir}/minibp

build blueprint_tools: phony

