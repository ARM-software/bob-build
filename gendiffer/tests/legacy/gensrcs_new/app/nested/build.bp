

bob_genrule {
    name: "generate_source_single_new",
    srcs: [
        "before_generate.in",
    ],
    out: ["single.cpp"],

    tool_files: ["generator.py"],
    cmd: "python ${location} --in ${in} --out ${out} --expect-in before_generate.in",
}

bob_binary {
    name: "host_and_target_supported_binary_new",
    host_supported: true,
    target_supported: true,
    build_by_default: true,
    srcs: ["simple_main.c"],
    host: {
        out: "host_binary_new",
    },
}

bob_genrule {
    name: "use_target_specific_library_new",
    out: ["libout.a"],
    tools: ["host_and_target_supported_binary_new:host"],
    cmd: "test $$(basename ${location}) = host_binary_new && cp ${location} ${out}",
}

bob_genrule {
    name: "multi_tool_file",
    srcs: ["depgen2.in"],
    out: [
        "output.txt",
        "out.h",
    ],
    tool_files: [
        "gen_with_dep.py",
        "depgen1.in",
    ],
    cmd: "${location gen_with_dep.py} --gen-implicit-out -o ${genDir}/output.txt --in ${location depgen1.in} ${in}",
}

bob_genrule {
    name: "gen_source_implicit_outs_new",
    srcs: [
        "depgen1.in",
        "depgen2.in",
    ],
    out: [
        "output.txt",
        "out.h",
    ],
    tool_files: ["gen_with_dep.py"],
    cmd: "${location} --gen-implicit-out -o ${genDir}/output.txt --in ${in}",
}
