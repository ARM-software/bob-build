# ******************************************************************************
# ***            This file is generated and should not be edited             ***
# ******************************************************************************
#
# This file contains variables, rules, and pools with name prefixes indicating
# they were generated by the following Go packages:
#
#     bob       [from Go package bob]
#     bootstrap [from Go package github.com/google/blueprint/bootstrap]
#
ninja_required_version = 1.7.0

g.bob.BobScriptsDir = redacted/scripts

g.bob.BuildDir = redacted

g.bob.SrcDir = redacted

g.bob.strip = ${g.bob.BobScriptsDir}/strip.py

g.bob.toc = ${g.bob.BobScriptsDir}/library_toc.py

g.bootstrap.BinDir = redacted/.bootstrap/bin

g.bootstrap.buildDir = redacted

g.bootstrap.ninjaBuildDir = redacted

# Limit the parallelization of linking, which is memory intensive
pool g.bob.link
    depth = 1

builddir = ${g.bootstrap.ninjaBuildDir}

rule g.bob.cc
    command = ${build_wrapper} ${ccompiler} -c ${cflags} ${conlyflags} -MD -MF ${depfile} ${in} -o ${out}
    depfile = ${out}.d
    deps = gcc
    description = ${out}

rule g.bob.install
    command = rm -f ${out}; cp ${in} ${out}
    description = ${out}

rule g.bob.shared_library
    pool = g.bob.link
    command = ${build_wrapper} ${linker} -shared ${in} -o ${out} ${ldflags} ${static_libs} -L${shared_libs_dir} ${shared_libs_flags} ${ldlibs}
    description = ${out}

rule g.bob.shared_library_toc
    command = ${g.bob.toc} ${in} -o ${out} ${tocflags}
    description = Generate toc ${out}
    restat = true

rule g.bob.strip
    command = ${g.bob.strip} ${args} -o ${out} ${in}
    description = strip ${out}

rule g.bootstrap.cp
    command = cp ${in} ${out}
    description = cp ${out}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  libstripped_library
# Variant: target
# Type:    bob_shared_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.libstripped_library_target.cflags = 
m.libstripped_library_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/libstripped_library/lib.c.o: g.bob.cc $
        ${g.bob.SrcDir}/lib.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.libstripped_library_target.cflags}
    conlyflags = ${m.libstripped_library_target.conlyflags}

build ${g.bob.BuildDir}/target/strip/libstripped_library.so: g.bob.strip $
        ${g.bob.BuildDir}/target/shared/libstripped_library.so | $
        ${g.bob.strip}
    args = --format elf --objcopy-tool objcopy --strip

build ${g.bob.BuildDir}/install/lib/libstripped_library.so: g.bob.install $
        ${g.bob.BuildDir}/target/strip/libstripped_library.so

build ${g.bob.BuildDir}/target/shared/libstripped_library.so: $
        g.bob.shared_library $
        ${g.bob.BuildDir}/target/objects/libstripped_library/lib.c.o
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = 

build ${g.bob.BuildDir}/target/shared/libstripped_library.so.toc: $
        g.bob.shared_library_toc $
        ${g.bob.BuildDir}/target/shared/libstripped_library.so | ${g.bob.toc}
    tocflags = --format elf --objdump-tool objdump

build libstripped_library: phony $
        ${g.bob.BuildDir}/install/lib/libstripped_library.so $
        ${g.bob.BuildDir}/target/shared/libstripped_library.so
default libstripped_library

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Singleton: bootstrap
# Factory:   github.com/google/blueprint/bootstrap.Main.newSingletonFactory.func4

build ${g.bootstrap.buildDir}/bin/minibp: g.bootstrap.cp $
        ${g.bootstrap.BinDir}/minibp
default ${g.bootstrap.buildDir}/bin/minibp

build blueprint_tools: phony
default blueprint_tools

