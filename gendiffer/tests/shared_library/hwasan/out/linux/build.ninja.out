# ******************************************************************************
# ***            This file is generated and should not be edited             ***
# ******************************************************************************
#
# This file contains variables, rules, and pools with name prefixes indicating
# they were generated by the following Go packages:
#
#     bob       [from Go package bob]
#     bootstrap [from Go package github.com/google/blueprint/bootstrap]
#
ninja_required_version = 1.7.0

g.bob.BobScriptsDir = redacted/scripts

g.bob.BuildDir = redacted

g.bob.SrcDir = redacted

g.bob.toc = ${g.bob.BobScriptsDir}/library_toc.py

g.bootstrap.BinDir = redacted/.bootstrap/bin

g.bootstrap.buildDir = redacted

g.bootstrap.ninjaBuildDir = redacted

# Limit the parallelization of linking, which is memory intensive
pool g.bob.link
    depth = 1

builddir = ${g.bootstrap.ninjaBuildDir}

rule g.bob.cxx
    command = ${build_wrapper} ${cxxcompiler} -c ${cflags} ${cxxflags} -MD -MF ${depfile} ${in} -o ${out}
    depfile = ${out}.d
    deps = gcc
    description = ${out}

rule g.bob.executable
    pool = g.bob.link
    command = ${build_wrapper} ${linker} ${in} -o ${out} ${ldflags} ${static_libs} -L${shared_libs_dir} ${shared_libs_flags} ${ldlibs}
    description = ${out}

rule g.bob.shared_library
    pool = g.bob.link
    command = ${build_wrapper} ${linker} -shared ${in} -o ${out} ${ldflags} ${static_libs} -L${shared_libs_dir} ${shared_libs_flags} ${ldlibs}
    description = ${out}

rule g.bob.shared_library_toc
    command = ${g.bob.toc} ${in} -o ${out} ${tocflags}
    description = Generate toc ${out}
    restat = true

rule g.bootstrap.cp
    command = cp ${in} ${out}
    description = cp ${out}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  bob_binary
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.bob_binary_target.cflags = 
m.bob_binary_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/bob_binary/src.cpp.o: g.bob.cxx $
        ${g.bob.SrcDir}/src.cpp
    build_wrapper = 
    cflags = ${m.bob_binary_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.bob_binary_target.cxxflags}

build ${g.bob.BuildDir}/target/executable/bob_binary: g.bob.executable $
        ${g.bob.BuildDir}/target/objects/bob_binary/src.cpp.o | $
        ${g.bob.BuildDir}/target/shared/libshared.so.toc || $
        ${g.bob.BuildDir}/target/shared/libshared.so
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -lshared -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = 

build bob_binary: phony ${g.bob.BuildDir}/target/executable/bob_binary
default bob_binary

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  libshared
# Variant: target
# Type:    bob_shared_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.libshared_target.cflags = 
m.libshared_target.cxxflags = 

build ${g.bob.BuildDir}/target/objects/libshared/src.cpp.o: g.bob.cxx $
        ${g.bob.SrcDir}/src.cpp
    build_wrapper = 
    cflags = ${m.libshared_target.cflags}
    cxxcompiler = g++
    cxxflags = ${m.libshared_target.cxxflags}

build ${g.bob.BuildDir}/target/shared/libshared.so: g.bob.shared_library $
        ${g.bob.BuildDir}/target/objects/libshared/src.cpp.o
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = 

build ${g.bob.BuildDir}/target/shared/libshared.so.toc: $
        g.bob.shared_library_toc ${g.bob.BuildDir}/target/shared/libshared.so $
        | ${g.bob.toc}
    tocflags = --format elf --objdump-tool objdump

build libshared: phony ${g.bob.BuildDir}/target/shared/libshared.so

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Singleton: bootstrap
# Factory:   github.com/google/blueprint/bootstrap.Main.newSingletonFactory.func4

build ${g.bootstrap.buildDir}/bin/minibp: g.bootstrap.cp $
        ${g.bootstrap.BinDir}/minibp

build blueprint_tools: phony

