# ******************************************************************************
# ***            This file is generated and should not be edited             ***
# ******************************************************************************
#
# This file contains variables, rules, and pools with name prefixes indicating
# they were generated by the following Go packages:
#
#     bob       [from Go package bob]
#     bootstrap [from Go package github.com/google/blueprint/bootstrap]
#
ninja_required_version = 1.7.0

g.bob.BuildDir = redacted

g.bob.SrcDir = redacted

g.bootstrap.BinDir = redacted/.bootstrap/bin

g.bootstrap.buildDir = redacted

g.bootstrap.ninjaBuildDir = redacted

# Limit the parallelization of linking, which is memory intensive
pool g.bob.link
    depth = 1

builddir = ${g.bootstrap.ninjaBuildDir}

rule g.bob.cc
    command = ${build_wrapper} ${ccompiler} -c ${cflags} ${conlyflags} -MD -MF ${depfile} ${in} -o ${out}
    depfile = ${out}.d
    deps = gcc
    description = ${out}

rule g.bob.shared_library
    pool = g.bob.link
    command = ${build_wrapper} ${linker} -shared ${in} -o ${out} ${ldflags} ${static_libs} -L${shared_libs_dir} ${shared_libs_flags} ${ldlibs}
    description = ${out}

rule g.bob.static_library
    command = rm -f ${out} && ${build_wrapper} ${ar} -rcs ${out} ${in}
    description = ${out}

rule g.bootstrap.cp
    command = cp ${in} ${out}
    description = cp ${out}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  foo
# Variant: target
# Type:    bob_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.foo_target.cflags = -DROOT_TOOLCHAIN=1
m.foo_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/foo/src.c.o: g.bob.cc $
        ${g.bob.SrcDir}/src.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.foo_target.cflags}
    conlyflags = ${m.foo_target.conlyflags}

build ${g.bob.BuildDir}/target/shared/foo.so: g.bob.shared_library $
        ${g.bob.BuildDir}/target/objects/foo/src.c.o
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = 

build ${g.bob.BuildDir}/target/static/foo.a: g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/foo/src.c.o
    ar = ar
    build_wrapper = 

build foo: phony ${g.bob.BuildDir}/target/static/foo.a $
        ${g.bob.BuildDir}/target/shared/foo.so
default foo

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  overwrites
# Variant: target
# Type:    bob_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: inherits/overwrite/build.bp:redacted

m.overwrites_target.cflags = -DOVERWRITES_TOOLCHAIN=1
m.overwrites_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/overwrites/inherits/overwrite/src.c.o: $
        g.bob.cc ${g.bob.SrcDir}/inherits/overwrite/src.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.overwrites_target.cflags}
    conlyflags = ${m.overwrites_target.conlyflags}

build ${g.bob.BuildDir}/target/shared/overwrites.so: g.bob.shared_library $
        ${g.bob.BuildDir}/target/objects/overwrites/inherits/overwrite/src.c.o
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = 

build ${g.bob.BuildDir}/target/static/overwrites.a: g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/overwrites/inherits/overwrite/src.c.o
    ar = ar
    build_wrapper = 

build overwrites: phony ${g.bob.BuildDir}/target/static/overwrites.a $
        ${g.bob.BuildDir}/target/shared/overwrites.so
default overwrites

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  parent
# Variant: target
# Type:    bob_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: inherits/overwrite/parent/build.bp:redacted

m.parent_target.cflags = -DOVERWRITES_TOOLCHAIN=1
m.parent_target.conlyflags = 

build $
        ${g.bob.BuildDir}/target/objects/parent/inherits/overwrite/parent/src.c.o $
        : g.bob.cc ${g.bob.SrcDir}/inherits/overwrite/parent/src.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.parent_target.cflags}
    conlyflags = ${m.parent_target.conlyflags}

build ${g.bob.BuildDir}/target/shared/parent.so: g.bob.shared_library $
        ${g.bob.BuildDir}/target/objects/parent/inherits/overwrite/parent/src.c.o
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = 

build ${g.bob.BuildDir}/target/static/parent.a: g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/parent/inherits/overwrite/parent/src.c.o
    ar = ar
    build_wrapper = 

build parent: phony ${g.bob.BuildDir}/target/static/parent.a $
        ${g.bob.BuildDir}/target/shared/parent.so
default parent

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  uses_root
# Variant: target
# Type:    bob_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: inherits/build.bp:redacted

m.uses_root_target.cflags = -DROOT_TOOLCHAIN=1
m.uses_root_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/uses_root/inherits/src.c.o: g.bob.cc $
        ${g.bob.SrcDir}/inherits/src.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.uses_root_target.cflags}
    conlyflags = ${m.uses_root_target.conlyflags}

build ${g.bob.BuildDir}/target/shared/uses_root.so: g.bob.shared_library $
        ${g.bob.BuildDir}/target/objects/uses_root/inherits/src.c.o
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = 

build ${g.bob.BuildDir}/target/static/uses_root.a: g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/uses_root/inherits/src.c.o
    ar = ar
    build_wrapper = 

build uses_root: phony ${g.bob.BuildDir}/target/static/uses_root.a $
        ${g.bob.BuildDir}/target/shared/uses_root.so
default uses_root

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Singleton: bootstrap
# Factory:   github.com/google/blueprint/bootstrap.Main.newSingletonFactory.func4

build ${g.bootstrap.buildDir}/bin/minibp: g.bootstrap.cp $
        ${g.bootstrap.BinDir}/minibp

build blueprint_tools: phony

