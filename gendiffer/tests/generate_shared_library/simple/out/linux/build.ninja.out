# ******************************************************************************
# ***            This file is generated and should not be edited             ***
# ******************************************************************************
#
# This file contains variables, rules, and pools with name prefixes indicating
# they were generated by the following Go packages:
#
#     bob       [from Go package bob]
#     bootstrap [from Go package github.com/google/blueprint/bootstrap]
#
ninja_required_version = 1.7.0

g.bob.BobScriptsDir = redacted/scripts

g.bob.BuildDir = redacted

g.bob.SrcDir = redacted

g.bob.toc = ${g.bob.BobScriptsDir}/library_toc.py

g.bootstrap.BinDir = redacted/.bootstrap/bin

g.bootstrap.buildDir = redacted

g.bootstrap.ninjaBuildDir = redacted

g.bootstrap.srcDir = redacted

# Limit the parallelization of linking, which is memory intensive
pool g.bob.link
    depth = 1

builddir = ${g.bootstrap.ninjaBuildDir}

rule g.bob.cc
    command = ${build_wrapper} ${ccompiler} -c ${cflags} ${conlyflags} -MD -MF ${depfile} ${in} -o ${out}
    depfile = ${out}.d
    deps = gcc
    description = ${out}

rule g.bob.copy
    command = cp ${in} ${out}
    description = ${out}

rule g.bob.executable
    pool = g.bob.link
    command = ${build_wrapper} ${linker} ${in} -o ${out} ${ldflags} ${static_libs} -L${shared_libs_dir} ${shared_libs_flags} ${ldlibs}
    description = ${out}

rule g.bob.shared_library_toc
    command = ${g.bob.toc} ${in} -o ${out} ${tocflags}
    description = Generate toc ${out}
    restat = true

rule g.bootstrap.cp
    command = cp ${in} ${out}
    description = cp ${out}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  binary_linked_to_gen_shared_rename
# Variant: host
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.binary_linked_to_gen_shared_rename_host.cflags = -I${g.bob.BuildDir}/gen/libblah_shared_rename/include
m.binary_linked_to_gen_shared_rename_host.conlyflags = 

build $
        ${g.bob.BuildDir}/host/objects/binary_linked_to_gen_shared_rename/main.c.o $
        : g.bob.cc ${g.bob.SrcDir}/main.c || $
        ${g.bob.BuildDir}/gen/libblah_shared_rename/libblah_shared2.so $
        ${g.bob.BuildDir}/gen/libblah_shared_rename/include/libblah.h $
        ${g.bob.BuildDir}/gen/libblah_shared_rename/include/libblah_feature.h
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.binary_linked_to_gen_shared_rename_host.cflags}
    conlyflags = ${m.binary_linked_to_gen_shared_rename_host.conlyflags}

build ${g.bob.BuildDir}/host/executable/binary_linked_to_gen_shared_rename: $
        g.bob.executable $
        ${g.bob.BuildDir}/host/objects/binary_linked_to_gen_shared_rename/main.c.o $
        | ${g.bob.BuildDir}/host/shared/libblah_shared2.so.toc || $
        ${g.bob.BuildDir}/host/shared/libblah_shared2.so
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/host/shared
    shared_libs_flags = -lblah_shared2 -Wl,-rpath-link,${g.bob.BuildDir}/host/shared
    static_libs = 

build binary_linked_to_gen_shared_rename: phony $
        ${g.bob.BuildDir}/host/executable/binary_linked_to_gen_shared_rename
default binary_linked_to_gen_shared_rename

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  libblah_shared_rename
# Variant: host
# Type:    bob_generate_shared_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

rule m.libblah_shared_rename_host.gen_libblah_shared_rename
    command = gcc -fPIC -o ${_out_} -shared ${in}; mkdir -p ${gen_dir}/include; cp ${module_dir}/libblah/libblah.h ${module_dir}/libblah/libblah_feature.h ${gen_dir}/include/.
    description = ${out}
    restat = true

build ${g.bob.BuildDir}/gen/libblah_shared_rename/libblah_shared2.so | $
        ${g.bob.BuildDir}/gen/libblah_shared_rename/include/libblah.h $
        ${g.bob.BuildDir}/gen/libblah_shared_rename/include/libblah_feature.h: $
        m.libblah_shared_rename_host.gen_libblah_shared_rename $
        ${g.bob.SrcDir}/libblah/libblah.c | ${g.bob.SrcDir}/libblah/libblah.h $
        ${g.bob.SrcDir}/libblah/libblah_feature.h
    _out_ = ${g.bob.BuildDir}/gen/libblah_shared_rename/libblah_shared2.so
    gen_dir = ${g.bob.BuildDir}/gen/libblah_shared_rename
    module_dir = ${g.bob.SrcDir}

build ${g.bob.BuildDir}/host/shared/libblah_shared2.so: g.bob.copy $
        ${g.bob.BuildDir}/gen/libblah_shared_rename/libblah_shared2.so

build ${g.bob.BuildDir}/host/shared/libblah_shared2.so.toc: $
        g.bob.shared_library_toc $
        ${g.bob.BuildDir}/host/shared/libblah_shared2.so | ${g.bob.toc}
    tocflags = --format elf --objdump-tool objdump

build libblah_shared_rename: phony $
        ${g.bob.BuildDir}/gen/libblah_shared_rename/libblah_shared2.so $
        ${g.bob.BuildDir}/gen/libblah_shared_rename/include/libblah.h $
        ${g.bob.BuildDir}/gen/libblah_shared_rename/include/libblah_feature.h

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Singleton: bootstrap
# Factory:   github.com/google/blueprint/bootstrap.Main.func4

rule s.bootstrap.bigbpDocs
    command = ${g.bootstrap.BinDir}/minibp -p -l redacted/bplist -b ${g.bootstrap.buildDir} --docs ${out} ${g.bootstrap.srcDir}/build.bp
    description = minibp docs ${out}

build ${g.bootstrap.buildDir}/bin/minibp: g.bootstrap.cp $
        ${g.bootstrap.BinDir}/minibp
default ${g.bootstrap.buildDir}/bin/minibp

build ${g.bootstrap.buildDir}/.primary/docs/minibp.html: s.bootstrap.bigbpDocs $
        | ${g.bootstrap.BinDir}/minibp
default ${g.bootstrap.buildDir}/.primary/docs/minibp.html

build blueprint_docs: phony ${g.bootstrap.buildDir}/.primary/docs/minibp.html
default blueprint_docs

build blueprint_tools: phony
default blueprint_tools

