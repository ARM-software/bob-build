#!/usr/bin/env bash




# This script sets up the source tree to use Bob Blueprint under Android.

# Bootstrap Bob with a BUILDDIR in the Android output directory, and
# generate an initial config based on the args passed to this script.
# Finally run Bob to generate the Android.bp for the configuration.

SCRIPT_DIR="$(dirname "${BASH_SOURCE[0]}")"
BOB_DIR=bob
PROJ_NAME="bob_tests"

source "${SCRIPT_DIR}/bootstrap_utils.sh"

BASENAME=$(basename "$0")
function usage {
    cat <<EOF
$BASENAME

Sets up the Bob tests to build for Android using Android.bp files.

Usage:
 $BASENAME CONFIG_OPTIONS...
 $BASENAME --menuconfig

  CONFIG_OPTIONS is a list of configuration items that can include .config
  profiles and explicit options (like DEBUG=y)

Options
  -c, --configdir   Set configuration directory
  -m, --menuconfig  Open configuration editor
  -h, --help        Help text

Examples:
  $BASENAME ANDROID_N=y DEBUG=n
  $BASENAME --menuconfig
EOF
}

MENU=0
PARAMS=$(getopt -o c:hm -l configdir:,help,menuconfig --name "$(basename "$0")" -- "$@")

eval set -- "$PARAMS"
unset PARAMS

while true ; do
    case $1 in
        -c | --configdir)
            shift
            CONFIG_DIR="$1"
            shift
            ;;
        -m | --menuconfig)
            MENU=1
            shift
            ;;
        --)
            shift
            break
            ;;
        -h | --help | *)
            usage
            exit 1
            ;;
    esac
done

[[ -n ${OUT} ]] || { echo "\$OUT is not set - did you run 'lunch'?"; exit 1; }
[[ -n ${ANDROID_BUILD_TOP} ]] || { echo "\$ANDROID_BUILD_TOP is not set - did you run 'lunch'?"; exit 1; }

# The tests need a symlink in the source directory to the parent bob
# directory, as Blueprint won't accept ..
create_link .. "${SCRIPT_DIR}/${BOB_DIR}"

source "${SCRIPT_DIR}/${BOB_DIR}/pathtools.bash"

PROJ_DIR=$(relative_path "${ANDROID_BUILD_TOP}" "${SCRIPT_DIR}")

# Add a symlink to enable the external_libs test
create_link external_lib.bp "${SCRIPT_DIR}/external_libs/external/Android.bp"

# Change to the working directory
cd "${ANDROID_BUILD_TOP}" || exit

### Variables required for Bob and Android.bp bootstrap ###

BPBUILD_DIR="${OUT}/gen/STATIC_LIBRARIES/bobbp_${PROJ_NAME}_intermediates"
export BUILDDIR="${BPBUILD_DIR}"
export CONFIGDIR="${CONFIG_DIR}"
export CONFIGNAME="bob.config"
export SRCDIR="${PROJ_DIR}"
export BLUEPRINT_LIST_FILE="${SRCDIR}/bplist"

# Bootstrap Bob
"${PROJ_DIR}/${BOB_DIR}/bootstrap_androidbp.bash"


# Pick up some info that bob has worked out
source "${BUILDDIR}/.bob.bootstrap"

ANDROID_VERSION="$("${SCRIPT_DIR}/${BOB_DIR}/scripts/android_version.py")"

if [ $MENU -ne 1 ] || [ ! -f "${BPBUILD_DIR}/${CONFIGNAME}" ] ; then
    # Have arguments or missing bob.config. Run config.
    "${BPBUILD_DIR}/config" ANDROID=y BUILDER_ANDROID_BP=y ANDROID_PLATFORM_VERSION="${ANDROID_VERSION}" "$@"
fi

if [ $MENU -eq 1 ] ; then
    "${BPBUILD_DIR}/menuconfig"
fi

# Once configured, generate the Android.bp by running Bob
# There is a symlink in the build directory.
"${BPBUILD_DIR}/bob"
