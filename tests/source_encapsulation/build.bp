/*
 * Copyright 2019-2020 Arm Limited.
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

////////////////////////////////////////////////////////////////////////////////
// Case A - generated headers: direct and transitive encapsulation of header dirs
//
//             3 (root module)
//            /
//           2
//          /
//         1
//
bob_generate_source {
    name: "encapsulation_source1",

    srcs: ["srcs/header1.h"],
    out: ["header1.h"],

    cmd: "cp ${in} ${out}",
    export_gen_include_dirs: ["."],
}

bob_generate_source {
    name: "encapsulation_source2",

    srcs: ["srcs/header2.h"],
    out: ["header2.h"],

    cmd: "cp ${in} ${out}",
    export_gen_include_dirs: ["."],
    encapsulates: ["encapsulation_source1"],
}

bob_generate_source {
    name: "encapsulation_source3",

    srcs: ["srcs/header3.h"],
    out: ["header3.h"],

    cmd: "cp ${in} ${out}",
    export_gen_include_dirs: ["."],
    encapsulates: ["encapsulation_source2"],
}

/////////////////////////////////////////////////////////////////////////
// Case B - generated headers: uses modules from case A, but additionally
// module 3 uses output of module 4 through module_deps relation,
// ignoring any further encapsulations that module 4 may have defined.
//
//             3 (root module)
//            / .
//           2   4
//          /     \
//         1       5 (should not be included by 3)
//
bob_generate_source {
    name: "encapsulation_source5",

    srcs: ["srcs/header5.h"],
    out: ["header5.h"],

    cmd: "cp ${in} ${out}",
}

bob_generate_source {
    name: "encapsulation_source4",

    srcs: ["srcs/header4.h"],
    out: ["header4.h"],

    cmd: "cp ${in} ${out}",
    export_gen_include_dirs: ["."],
    encapsulates: ["encapsulation_source5"],
}

bob_generate_source {
    name: "encapsulation_source3_complex",
    module_deps: ["encapsulation_source4"],

    srcs: ["srcs/header3.h"],
    out: ["header3.h"],

    cmd: "cat ${in} ${encapsulation_source4_out} >> ${out}",
    export_gen_include_dirs: ["."],
    encapsulates: ["encapsulation_source2"],
}

/////////////////////////////////////////////////////////////////////////////
// Case C - generated sources: direct and transitive encapsulation of outputs,
// module 3 uses output of module 4 through module_srcs relation,
// ignoring any further encapsulations that module 4 may have defined.
//
//             3 (root module)
//            / .
//           2   4
//          /     \
//         1       5 (should not be included by 3, but included by 4)
//
bob_generate_source {
    name: "encapsulation_generated_sources1",

    srcs: ["srcs/fun1.c"],
    out: ["fun1.c"],

    cmd: "cp ${in} ${out}",
}

bob_generate_source {
    name: "encapsulation_generated_sources2",

    srcs: ["srcs/fun2.c"],
    out: ["fun2.c"],

    cmd: "cp ${in} ${out}",
    encapsulates: ["encapsulation_generated_sources1"],
}

bob_generate_source {
    name: "encapsulation_generated_sources5",

    srcs: ["srcs/fun5.c"],
    out: ["fun5.c"],

    cmd: "cp ${in} ${out}",
}

bob_generate_source {
    name: "encapsulation_generated_sources4",

    out: ["funcs.txt"],

    tool: "extract_funcs.py",
    cmd: "python ${tool} --in ${encapsulation_generated_sources5_out} --out ${out}",

    encapsulates: ["encapsulation_generated_sources5"],
    // module_deps is required to get encapsulation_generated_sources5_out
    // reference in cmd, as encapsulates does not create such reference
    module_deps: ["encapsulation_generated_sources5"],
}

bob_generate_source {
    name: "encapsulation_generated_sources3",
    module_srcs: ["encapsulation_generated_sources4"],

    out: ["fun3.c"],

    tool: "gen_fun3.py",
    cmd: "python ${tool} --in ${in} --out ${out}",

    encapsulates: ["encapsulation_generated_sources2"],
}

/////////////////////////////////////////////////////////////////////////////

bob_binary {
    name: "validate_source_encapsulation_simple",
    generated_headers: ["encapsulation_source3"],
    srcs: ["simple.c"],
}

bob_binary {
    name: "validate_source_encapsulation_complex",
    generated_headers: ["encapsulation_source3_complex"],
    srcs: ["complex.c"],
    linux: {
        build_wrapper: "source_encapsulation/check_includes.py",
    },
}

bob_binary {
    name: "validate_source_encapsulation_generated_sources",
    generated_sources: ["encapsulation_generated_sources3"],
    srcs: ["main_fun.c"],
}

bob_alias {
    name: "bob_test_source_encapsulation",
    srcs: [
        "validate_source_encapsulation_simple",
        "validate_source_encapsulation_complex",
        "validate_source_encapsulation_generated_sources",
    ],
}
