/*
 * Copyright 2023 Arm Limited.
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

bob_genrule {
    name: "generate_source_multiple_in_new",
    srcs: [
        "before_generate.in",
        "before_generate2.in",
        "before_generate3.in",
    ],
    out: ["multiple_in.cpp"],

    tool_files: ["generator.py"],
    cmd: "python $(location) --in $(in) --out $(out) --expect-in before_generate.in before_generate2.in before_generate3.in",
}

bob_genrule {
    name: "generate_source_multiple_out_new",
    srcs: [
        "before_generate.in",
    ],
    out: [
        "multiple_out.cpp",
        "multiple_out2.cpp",
    ],

    tool_files: ["generator.py"],
    cmd: "python $(location) --in $(in) --out $(out) --expect-in before_generate.in",
}

bob_genrule {
    name: "generate_source_multiple_in_out_new",
    srcs: [
        "before_generate.in",
        "before_generate2.in",
        "before_generate3.in",
    ],
    out: [
        "multiple_in_out.cpp",
        "multiple_in_out2.cpp",
    ],

    tool_files: ["generator.py"],
    cmd: "python $(location) --in $(in) --out $(out) --expect-in before_generate.in before_generate2.in before_generate3.in",
}

bob_genrule {
    name: "generate_source_single_level1_new",
    srcs: [":generate_source_single_new"],

    out: ["level_1_single.cpp"],

    tool_files: ["generator.py"],
    cmd: "python $(location) --in $(in) --out $(out) --expect-in single.cpp",
}

bob_genrule {
    name: "generate_source_single_level2_new",
    srcs: [":generate_source_single_level1_new"],

    out: ["level_2_single.cpp"],

    tool_files: ["generator.py"],
    cmd: "python $(location) --in $(in) --out $(out) --expect-in level_1_single.cpp",
}

bob_genrule {
    name: "generate_source_single_level3_new",
    srcs: [":generate_source_single_level2_new"],

    out: ["level_3_single.cpp"],

    tool_files: ["generator.py"],
    cmd: "python $(location) --in $(in) --out $(out) --expect-in level_2_single.cpp",
}

bob_genrule {
    name: "generate_source_single_nested_with_extra_new",
    srcs: [
        ":generate_source_single_level2_new",
        "before_generate.in",
    ],
    out: ["extra_single.cpp"],

    tool_files: ["generator.py"],
    cmd: "python $(location) --in $(in) --out $(out) --expect-in before_generate.in level_2_single.cpp",
}

bob_genrule {
    name: "generate_source_single_dependend_new",
    srcs: [
        ":generate_source_single_new",
        "before_generate.in",
    ],
    out: ["deps.cpp"],

    tool_files: ["generator.py"],
    cmd: "python $(location) --in $(in) --out $(out) --expect-in before_generate.in single.cpp",
}

bob_genrule {
    name: "generate_source_single_dependend_nested_new",
    srcs: [
        ":generate_source_single_dependend_new",
        "before_generate.in",
    ],
    out: ["deps2.cpp"],

    tool_files: ["generator.py"],
    cmd: "python $(location) --in $(in) --out $(out) --expect-in before_generate.in deps.cpp",
}

bob_binary {
    name: "validate_link_generate_sources_new",
    generated_sources: [
        "generate_source_single_new",
        "generate_source_multiple_in_new",
        "generate_source_multiple_out_new",
        "generate_source_multiple_in_out_new",

        "generate_source_single_level1_new",
        "generate_source_single_level2_new",
        "generate_source_single_level3_new",
        "generate_source_single_nested_with_extra_new",

        "generate_source_single_dependend_new",
        "generate_source_single_dependend_nested_new",
    ],
    generated_headers: [
        "generate_source_single_new",
    ],
    srcs: ["main.cpp"],
}

bob_genrule {
    name: "validate_install_generate_sources_new",
    out: ["validate_install_generate_sources.txt"],
    cmd: "touch $(out)",
}

bob_binary {
    name: "host_and_target_supported_binary_new",
    host_supported: true,
    target_supported: true,
    build_by_default: true,
    srcs: ["simple_main.c"],
    host: {
        out: "host_binary_new",
    },
}

bob_genrule {
    name: "use_target_specific_library_new",
    out: ["libout.a"],
    tools: ["host_and_target_supported_binary_new:host"],
    cmd: "test $$(basename $(location)) = host_binary_new && cp $(location) $(out)",
}

bob_genrule {
    name: "multi_src_tag",
    srcs: [
        ":generate_source_single_new",
        "before_generate.in",
    ],
    out: ["deps.cpp"],

    tool_files: ["generator.py"],
    cmd: "python $(location generator.py) --in $(in) --out $(out) --expect-in before_generate.in $(location :generate_source_single_new)",
}

bob_genrule {
    name: "exclude_support",
    srcs: [
        "input1.in",
        "input2.in",
        "input3.in",
    ],
    exclude_srcs: ["input2.in"],
    out: [
        "input1.out",
        "input3.out",
    ],
    cmd: "touch $(out)",
}
