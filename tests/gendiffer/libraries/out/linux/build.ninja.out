# ******************************************************************************
# ***            This file is generated and should not be edited             ***
# ******************************************************************************
#
# This file contains variables, rules, and pools with name prefixes indicating
# they were generated by the following Go packages:
#
#     bob       [from Go package bob]
#     bootstrap [from Go package github.com/google/blueprint/bootstrap]
#
ninja_required_version = 1.7.0

g.bob.BobScriptsDir = redacted/scripts

g.bob.BuildDir = redacted

g.bob.SrcDir = redacted

g.bob.strip = ${g.bob.BobScriptsDir}/strip.py

g.bob.toc = ${g.bob.BobScriptsDir}/library_toc.py

g.bob.whole_static_tool = ${g.bob.BobScriptsDir}/whole_static.py

g.bootstrap.BinDir = redacted/.bootstrap/bin

g.bootstrap.buildDir = redacted

g.bootstrap.ninjaBuildDir = redacted

g.bootstrap.srcDir = redacted

# Limit the parallelization of linking, which is memory intensive
pool g.bob.link
    depth = 1

builddir = ${g.bootstrap.ninjaBuildDir}

rule g.bob.cc
    command = ${build_wrapper} ${ccompiler} -c ${cflags} ${conlyflags} -MD -MF ${depfile} ${in} -o ${out}
    depfile = ${out}.d
    deps = gcc
    description = ${out}

rule g.bob.cxx
    command = ${build_wrapper} ${cxxcompiler} -c ${cflags} ${cxxflags} -MD -MF ${depfile} ${in} -o ${out}
    depfile = ${out}.d
    deps = gcc
    description = ${out}

rule g.bob.executable
    pool = g.bob.link
    command = ${build_wrapper} ${linker} ${in} -o ${out} ${ldflags} ${static_libs} -L${shared_libs_dir} ${shared_libs_flags} ${ldlibs}
    description = ${out}

rule g.bob.install
    command = rm -f ${out}; cp ${in} ${out}
    description = ${out}

rule g.bob.shared_library
    pool = g.bob.link
    command = ${build_wrapper} ${linker} -shared ${in} -o ${out} ${ldflags} ${static_libs} -L${shared_libs_dir} ${shared_libs_flags} ${ldlibs}
    description = ${out}

rule g.bob.shared_library_toc
    command = ${g.bob.toc} ${in} -o ${out} ${tocflags}
    description = Generate toc ${out}
    restat = true

rule g.bob.static_library
    command = rm -f ${out} && ${build_wrapper} ${ar} -rcs ${out} ${in}
    description = ${out}

rule g.bob.strip
    command = ${g.bob.strip} ${args} -o ${out} ${in}
    description = strip ${out}

rule g.bob.symlink
    command = for i in ${out}; do ln -nsf ${target} $$i; done;
    description = ${out}

rule g.bob.whole_static_library
    command = ${g.bob.whole_static_tool} --build-wrapper "${build_wrapper}" --ar ${ar} --out ${out} ${in} ${whole_static_libs}
    description = ${out}

rule g.bootstrap.cp
    command = cp ${in} ${out}
    description = cp ${out}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  bob_test_local_consumer
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.bob_test_local_consumer_target.cflags = -Wconversion -Werror -isystem ${g.bob.SrcDir}/public
m.bob_test_local_consumer_target.conlyflags = 

build $
        ${g.bob.BuildDir}/target/objects/bob_test_local_consumer/src/bob_test_consumer.c.o $
        : g.bob.cc ${g.bob.SrcDir}/src/bob_test_consumer.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.bob_test_local_consumer_target.cflags}
    conlyflags = ${m.bob_test_local_consumer_target.conlyflags}

build ${g.bob.BuildDir}/target/executable/bob_test_local_consumer: $
        g.bob.executable $
        ${g.bob.BuildDir}/target/objects/bob_test_local_consumer/src/bob_test_consumer.c.o $
        | ${g.bob.BuildDir}/target/static/bob_test_local_libpublic.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = ${g.bob.BuildDir}/target/static/bob_test_local_libpublic.a

build bob_test_local_consumer: phony $
        ${g.bob.BuildDir}/target/executable/bob_test_local_consumer
default bob_test_local_consumer

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  bob_test_local_libconsumer
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.bob_test_local_libconsumer_target.cflags = -Wconversion -Werror -isystem ${g.bob.SrcDir}/public
m.bob_test_local_libconsumer_target.conlyflags = 

build $
        ${g.bob.BuildDir}/target/objects/bob_test_local_libconsumer/src/bob_test_consumer.c.o $
        : g.bob.cc ${g.bob.SrcDir}/src/bob_test_consumer.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.bob_test_local_libconsumer_target.cflags}
    conlyflags = ${m.bob_test_local_libconsumer_target.conlyflags}

build ${g.bob.BuildDir}/target/static/bob_test_local_libconsumer.a: $
        g.bob.whole_static_library $
        ${g.bob.BuildDir}/target/objects/bob_test_local_libconsumer/src/bob_test_consumer.c.o $
        | ${g.bob.whole_static_tool} $
        ${g.bob.BuildDir}/target/static/bob_test_local_libpublic.a
    ar = ar
    build_wrapper = 
    whole_static_libs = ${g.bob.BuildDir}/target/static/bob_test_local_libpublic.a

build bob_test_local_libconsumer: phony $
        ${g.bob.BuildDir}/target/static/bob_test_local_libconsumer.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  bob_test_local_libpublic
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.bob_test_local_libpublic_target.cflags = -Wconversion -I${g.bob.SrcDir}/include -I${g.bob.SrcDir}/public
m.bob_test_local_libpublic_target.conlyflags = 

build $
        ${g.bob.BuildDir}/target/objects/bob_test_local_libpublic/src/bob_test_public_impl.c.o $
        : g.bob.cc ${g.bob.SrcDir}/src/bob_test_public_impl.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.bob_test_local_libpublic_target.cflags}
    conlyflags = ${m.bob_test_local_libpublic_target.conlyflags}

build ${g.bob.BuildDir}/target/static/bob_test_local_libpublic.a: $
        g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/bob_test_local_libpublic/src/bob_test_public_impl.c.o
    ar = ar
    build_wrapper = 

build bob_test_local_libpublic: phony $
        ${g.bob.BuildDir}/target/static/bob_test_local_libpublic.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  bob_test_target_specific_link
# Variant: host
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.bob_test_target_specific_link_host.cflags = 
m.bob_test_target_specific_link_host.conlyflags = 

build ${g.bob.BuildDir}/host/objects/bob_test_target_specific_link/main.c.o: $
        g.bob.cc ${g.bob.SrcDir}/main.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.bob_test_target_specific_link_host.cflags}
    conlyflags = ${m.bob_test_target_specific_link_host.conlyflags}

build ${g.bob.BuildDir}/host/executable/bob_test_target_specific_link: $
        g.bob.executable $
        ${g.bob.BuildDir}/host/objects/bob_test_target_specific_link/main.c.o $
        | ${g.bob.BuildDir}/host/static/libuses_target_specific_link.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/host/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/host/shared
    static_libs = ${g.bob.BuildDir}/host/static/libuses_target_specific_link.a

build bob_test_target_specific_link__host: phony $
        ${g.bob.BuildDir}/host/executable/bob_test_target_specific_link
default bob_test_target_specific_link__host

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  bob_test_target_specific_link
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.bob_test_target_specific_link_target.cflags = 
m.bob_test_target_specific_link_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/bob_test_target_specific_link/main.c.o: $
        g.bob.cc ${g.bob.SrcDir}/main.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.bob_test_target_specific_link_target.cflags}
    conlyflags = ${m.bob_test_target_specific_link_target.conlyflags}

build ${g.bob.BuildDir}/target/executable/bob_test_target_specific_link: $
        g.bob.executable $
        ${g.bob.BuildDir}/target/objects/bob_test_target_specific_link/main.c.o $
        | ${g.bob.BuildDir}/target/static/libuses_target_specific_link.a $
        ${g.bob.BuildDir}/target/static/libonly_works_on_target.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = ${g.bob.BuildDir}/target/static/libuses_target_specific_link.a ${g.bob.BuildDir}/target/static/libonly_works_on_target.a

build bob_test_target_specific_link__target: phony $
        ${g.bob.BuildDir}/target/executable/bob_test_target_specific_link
default bob_test_target_specific_link__target

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  gen_output
# Variant: host
# Type:    bob_transform_source
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

rule m.gen_output_host.gen_gen_output
    command = LD_LIBRARY_PATH=${g.bob.BuildDir}/host/shared:$$LD_LIBRARY_PATH ${tool} -u ${host_bin} -i ${in} -o ${_out_}
    description = ${out}
    restat = true

build ${g.bob.BuildDir}/gen/gen_output/input_one.gen: $
        m.gen_output_host.gen_gen_output ${g.bob.SrcDir}/input/input_one.in | $
        ${g.bob.BuildDir}/host/executable/utility $
        ${g.bob.BuildDir}/host/shared/libsharedtest.so.1.2.1 $
        ${g.bob.SrcDir}/transform.py
    _out_ = ${g.bob.BuildDir}/gen/gen_output/input_one.gen
    host_bin = ${g.bob.BuildDir}/host/executable/utility
    tool = ${g.bob.SrcDir}/transform.py

build ${g.bob.BuildDir}/gen/gen_output/input_two.gen: $
        m.gen_output_host.gen_gen_output ${g.bob.SrcDir}/input/input_two.in | $
        ${g.bob.BuildDir}/host/executable/utility $
        ${g.bob.BuildDir}/host/shared/libsharedtest.so.1.2.1 $
        ${g.bob.SrcDir}/transform.py
    _out_ = ${g.bob.BuildDir}/gen/gen_output/input_two.gen
    host_bin = ${g.bob.BuildDir}/host/executable/utility
    tool = ${g.bob.SrcDir}/transform.py

build gen_output: phony ${g.bob.BuildDir}/gen/gen_output/input_one.gen $
        ${g.bob.BuildDir}/gen/gen_output/input_two.gen

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_dep
# Variant: host
# Type:    bob_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

build ${g.bob.BuildDir}/host/shared/lib_dep.so: g.bob.shared_library
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/host/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/host/shared
    static_libs = 

build ${g.bob.BuildDir}/host/static/lib_dep.a: g.bob.static_library
    ar = ar
    build_wrapper = 

build lib_dep: phony ${g.bob.BuildDir}/host/static/lib_dep.a
default lib_dep

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_forward_defines
# Variant: host
# Type:    bob_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.lib_forward_defines_host.cflags = -DLOCAL_DEFINE -DFORWARDED_DEFINE -Iinternal/include
m.lib_forward_defines_host.cxxflags = 

build ${g.bob.BuildDir}/host/objects/lib_forward_defines/src/libs/lib.cpp.o: $
        g.bob.cxx ${g.bob.SrcDir}/src/libs/lib.cpp
    build_wrapper = 
    cflags = ${m.lib_forward_defines_host.cflags}
    cxxcompiler = g++
    cxxflags = ${m.lib_forward_defines_host.cxxflags}

build ${g.bob.BuildDir}/host/shared/lib_forward_defines.so: $
        g.bob.shared_library $
        ${g.bob.BuildDir}/host/objects/lib_forward_defines/src/libs/lib.cpp.o
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/host/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/host/shared
    static_libs = 

build ${g.bob.BuildDir}/host/static/lib_forward_defines.a: $
        g.bob.static_library $
        ${g.bob.BuildDir}/host/objects/lib_forward_defines/src/libs/lib.cpp.o
    ar = ar
    build_wrapper = 

build lib_forward_defines: phony $
        ${g.bob.BuildDir}/host/static/lib_forward_defines.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib_transitive_define
# Variant: host
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

build ${g.bob.BuildDir}/host/static/lib_transitive_define.a: $
        g.bob.static_library
    ar = ar
    build_wrapper = 

build lib_transitive_define: phony $
        ${g.bob.BuildDir}/host/static/lib_transitive_define.a
default lib_transitive_define

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  libonly_works_on_target
# Variant: host
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.libonly_works_on_target_host.cflags = -DFAIL=1
m.libonly_works_on_target_host.conlyflags = 

build $
        ${g.bob.BuildDir}/host/objects/libonly_works_on_target/fail_when_FAIL_is_1.c.o $
        : g.bob.cc ${g.bob.SrcDir}/fail_when_FAIL_is_1.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.libonly_works_on_target_host.cflags}
    conlyflags = ${m.libonly_works_on_target_host.conlyflags}

build ${g.bob.BuildDir}/host/static/libonly_works_on_target.a: $
        g.bob.static_library $
        ${g.bob.BuildDir}/host/objects/libonly_works_on_target/fail_when_FAIL_is_1.c.o
    ar = ar
    build_wrapper = 

build libonly_works_on_target__host: phony $
        ${g.bob.BuildDir}/host/static/libonly_works_on_target.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  libonly_works_on_target
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.libonly_works_on_target_target.cflags = -DFAIL=0
m.libonly_works_on_target_target.conlyflags = 

build $
        ${g.bob.BuildDir}/target/objects/libonly_works_on_target/fail_when_FAIL_is_1.c.o $
        : g.bob.cc ${g.bob.SrcDir}/fail_when_FAIL_is_1.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.libonly_works_on_target_target.cflags}
    conlyflags = ${m.libonly_works_on_target_target.conlyflags}

build ${g.bob.BuildDir}/target/static/libonly_works_on_target.a: $
        g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/libonly_works_on_target/fail_when_FAIL_is_1.c.o
    ar = ar
    build_wrapper = 

build libonly_works_on_target__target: phony $
        ${g.bob.BuildDir}/target/static/libonly_works_on_target.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  libsharedtest
# Variant: host
# Type:    bob_shared_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.libsharedtest_host.cflags = -fPIC
m.libsharedtest_host.conlyflags = 

build ${g.bob.BuildDir}/host/objects/libsharedtest/srcs/lib.c.o: g.bob.cc $
        ${g.bob.SrcDir}/srcs/lib.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.libsharedtest_host.cflags}
    conlyflags = ${m.libsharedtest_host.conlyflags}

build ${g.bob.BuildDir}/host/shared/libsharedtest.so: g.bob.symlink $
        ${g.bob.BuildDir}/host/shared/libsharedtest.so.1
    target = libsharedtest.so.1

build ${g.bob.BuildDir}/host/shared/libsharedtest.so.1: g.bob.symlink $
        ${g.bob.BuildDir}/host/shared/libsharedtest.so.1.2.1
    target = libsharedtest.so.1.2.1

build ${g.bob.BuildDir}/host/shared/libsharedtest.so.1.2.1: $
        g.bob.shared_library $
        ${g.bob.BuildDir}/host/objects/libsharedtest/srcs/lib.c.o
    build_wrapper = 
    ldflags = -Wl,-soname,libsharedtest.so.1 -Wl,--as-needed
    ldlibs = -lm -lc -ldl
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/host/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/host/shared
    static_libs = 

build ${g.bob.BuildDir}/host/shared/libsharedtest.so.1.2.1.toc: $
        g.bob.shared_library_toc $
        ${g.bob.BuildDir}/host/shared/libsharedtest.so.1.2.1 | ${g.bob.toc}
    tocflags = --format elf --objdump-tool objdump

build libsharedtest__host: phony $
        ${g.bob.BuildDir}/host/shared/libsharedtest.so $
        ${g.bob.BuildDir}/host/shared/libsharedtest.so.1 $
        ${g.bob.BuildDir}/host/shared/libsharedtest.so.1.2.1

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  libsharedtest
# Variant: target
# Type:    bob_shared_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.libsharedtest_target.cflags = -fPIC
m.libsharedtest_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/libsharedtest/srcs/lib.c.o: g.bob.cc $
        ${g.bob.SrcDir}/srcs/lib.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.libsharedtest_target.cflags}
    conlyflags = ${m.libsharedtest_target.conlyflags}

build ${g.bob.BuildDir}/target/shared/libsharedtest.so: g.bob.symlink $
        ${g.bob.BuildDir}/target/shared/libsharedtest.so.1
    target = libsharedtest.so.1

build ${g.bob.BuildDir}/target/shared/libsharedtest.so.1: g.bob.symlink $
        ${g.bob.BuildDir}/target/shared/libsharedtest.so.1.2.1
    target = libsharedtest.so.1.2.1

build ${g.bob.BuildDir}/target/shared/libsharedtest.so.1.2.1: $
        g.bob.shared_library $
        ${g.bob.BuildDir}/target/objects/libsharedtest/srcs/lib.c.o
    build_wrapper = 
    ldflags = -Wl,-soname,libsharedtest.so.1 -Wl,--as-needed
    ldlibs = -lm -lc -ldl
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = 

build ${g.bob.BuildDir}/target/shared/libsharedtest.so.1.2.1.toc: $
        g.bob.shared_library_toc $
        ${g.bob.BuildDir}/target/shared/libsharedtest.so.1.2.1 | ${g.bob.toc}
    tocflags = --format elf --objdump-tool objdump

build libsharedtest__target: phony $
        ${g.bob.BuildDir}/target/shared/libsharedtest.so $
        ${g.bob.BuildDir}/target/shared/libsharedtest.so.1 $
        ${g.bob.BuildDir}/target/shared/libsharedtest.so.1.2.1

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  libsharedtest_installed
# Variant: host
# Type:    bob_shared_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.libsharedtest_installed_host.cflags = -DFUNC_NAME=sharedtest_installed
m.libsharedtest_installed_host.conlyflags = 

build ${g.bob.BuildDir}/host/objects/libsharedtest_installed/lib.c.o: g.bob.cc $
        ${g.bob.SrcDir}/lib.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.libsharedtest_installed_host.cflags}
    conlyflags = ${m.libsharedtest_installed_host.conlyflags}

build ${g.bob.BuildDir}/install/host/lib/libsharedtest_installed.so: $
        g.bob.install ${g.bob.BuildDir}/host/shared/libsharedtest_installed.so

build ${g.bob.BuildDir}/host/shared/libsharedtest_installed.so: $
        g.bob.shared_library $
        ${g.bob.BuildDir}/host/objects/libsharedtest_installed/lib.c.o
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = -lm -lc -ldl
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/host/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/host/shared
    static_libs = 

build ${g.bob.BuildDir}/host/shared/libsharedtest_installed.so.toc: $
        g.bob.shared_library_toc $
        ${g.bob.BuildDir}/host/shared/libsharedtest_installed.so | $
        ${g.bob.toc}
    tocflags = --format elf --objdump-tool objdump

build libsharedtest_installed__host: phony $
        ${g.bob.BuildDir}/install/host/lib/libsharedtest_installed.so $
        ${g.bob.BuildDir}/host/shared/libsharedtest_installed.so

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  libsharedtest_installed
# Variant: target
# Type:    bob_shared_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.libsharedtest_installed_target.cflags = -DFUNC_NAME=sharedtest_installed
m.libsharedtest_installed_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/libsharedtest_installed/lib.c.o: $
        g.bob.cc ${g.bob.SrcDir}/lib.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.libsharedtest_installed_target.cflags}
    conlyflags = ${m.libsharedtest_installed_target.conlyflags}

build ${g.bob.BuildDir}/install/lib/libsharedtest_installed.so: g.bob.install $
        ${g.bob.BuildDir}/target/shared/libsharedtest_installed.so

build ${g.bob.BuildDir}/target/shared/libsharedtest_installed.so: $
        g.bob.shared_library $
        ${g.bob.BuildDir}/target/objects/libsharedtest_installed/lib.c.o
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = -lm -lc -ldl
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = 

build ${g.bob.BuildDir}/target/shared/libsharedtest_installed.so.toc: $
        g.bob.shared_library_toc $
        ${g.bob.BuildDir}/target/shared/libsharedtest_installed.so | $
        ${g.bob.toc}
    tocflags = --format elf --objdump-tool objdump

build libsharedtest_installed__target: phony $
        ${g.bob.BuildDir}/install/lib/libsharedtest_installed.so $
        ${g.bob.BuildDir}/target/shared/libsharedtest_installed.so

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  libsharedtest_not_installed
# Variant: host
# Type:    bob_shared_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.libsharedtest_not_installed_host.cflags = -DFUNC_NAME=sharedtest_not_installed
m.libsharedtest_not_installed_host.conlyflags = 

build ${g.bob.BuildDir}/host/objects/libsharedtest_not_installed/lib.c.o: $
        g.bob.cc ${g.bob.SrcDir}/lib.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.libsharedtest_not_installed_host.cflags}
    conlyflags = ${m.libsharedtest_not_installed_host.conlyflags}

build ${g.bob.BuildDir}/host/shared/libsharedtest_not_installed.so: $
        g.bob.shared_library $
        ${g.bob.BuildDir}/host/objects/libsharedtest_not_installed/lib.c.o
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/host/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/host/shared
    static_libs = 

build ${g.bob.BuildDir}/host/shared/libsharedtest_not_installed.so.toc: $
        g.bob.shared_library_toc $
        ${g.bob.BuildDir}/host/shared/libsharedtest_not_installed.so | $
        ${g.bob.toc}
    tocflags = --format elf --objdump-tool objdump

build libsharedtest_not_installed__host: phony $
        ${g.bob.BuildDir}/host/shared/libsharedtest_not_installed.so

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  libsharedtest_not_installed
# Variant: target
# Type:    bob_shared_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.libsharedtest_not_installed_target.cflags = -DFUNC_NAME=sharedtest_not_installed
m.libsharedtest_not_installed_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/libsharedtest_not_installed/lib.c.o: $
        g.bob.cc ${g.bob.SrcDir}/lib.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.libsharedtest_not_installed_target.cflags}
    conlyflags = ${m.libsharedtest_not_installed_target.conlyflags}

build ${g.bob.BuildDir}/target/shared/libsharedtest_not_installed.so: $
        g.bob.shared_library $
        ${g.bob.BuildDir}/target/objects/libsharedtest_not_installed/lib.c.o
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = 

build ${g.bob.BuildDir}/target/shared/libsharedtest_not_installed.so.toc: $
        g.bob.shared_library_toc $
        ${g.bob.BuildDir}/target/shared/libsharedtest_not_installed.so | $
        ${g.bob.toc}
    tocflags = --format elf --objdump-tool objdump

build libsharedtest_not_installed__target: phony $
        ${g.bob.BuildDir}/target/shared/libsharedtest_not_installed.so

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  libstripped_library
# Variant: target
# Type:    bob_shared_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.libstripped_library_target.cflags = -DFUNC_NAME=func
m.libstripped_library_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/libstripped_library/lib.c.o: g.bob.cc $
        ${g.bob.SrcDir}/lib.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.libstripped_library_target.cflags}
    conlyflags = ${m.libstripped_library_target.conlyflags}

build ${g.bob.BuildDir}/target/strip/libstripped_library.so: g.bob.strip $
        ${g.bob.BuildDir}/target/shared/libstripped_library.so | $
        ${g.bob.strip}
    args = --format elf --objcopy-tool objcopy --strip

build ${g.bob.BuildDir}/install/lib/libstripped_library.so: g.bob.install $
        ${g.bob.BuildDir}/target/strip/libstripped_library.so

build ${g.bob.BuildDir}/target/shared/libstripped_library.so: $
        g.bob.shared_library $
        ${g.bob.BuildDir}/target/objects/libstripped_library/lib.c.o
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = 

build ${g.bob.BuildDir}/target/shared/libstripped_library.so.toc: $
        g.bob.shared_library_toc $
        ${g.bob.BuildDir}/target/shared/libstripped_library.so | ${g.bob.toc}
    tocflags = --format elf --objdump-tool objdump

build libstripped_library: phony $
        ${g.bob.BuildDir}/install/lib/libstripped_library.so $
        ${g.bob.BuildDir}/target/shared/libstripped_library.so

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  libuses_target_specific_link
# Variant: host
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.libuses_target_specific_link_host.cflags = 
m.libuses_target_specific_link_host.conlyflags = 

build ${g.bob.BuildDir}/host/objects/libuses_target_specific_link/dummy.c.o: $
        g.bob.cc ${g.bob.SrcDir}/dummy.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.libuses_target_specific_link_host.cflags}
    conlyflags = ${m.libuses_target_specific_link_host.conlyflags}

build ${g.bob.BuildDir}/host/static/libuses_target_specific_link.a: $
        g.bob.static_library $
        ${g.bob.BuildDir}/host/objects/libuses_target_specific_link/dummy.c.o
    ar = ar
    build_wrapper = 

build libuses_target_specific_link__host: phony $
        ${g.bob.BuildDir}/host/static/libuses_target_specific_link.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  libuses_target_specific_link
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.libuses_target_specific_link_target.cflags = 
m.libuses_target_specific_link_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/libuses_target_specific_link/dummy.c.o: $
        g.bob.cc ${g.bob.SrcDir}/dummy.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.libuses_target_specific_link_target.cflags}
    conlyflags = ${m.libuses_target_specific_link_target.conlyflags}

build ${g.bob.BuildDir}/target/static/libuses_target_specific_link.a: $
        g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/libuses_target_specific_link/dummy.c.o
    ar = ar
    build_wrapper = 

build libuses_target_specific_link__target: phony $
        ${g.bob.BuildDir}/target/static/libuses_target_specific_link.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sharedtest
# Variant: host
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sharedtest_host.cflags = 
m.sharedtest_host.conlyflags = 

build ${g.bob.BuildDir}/host/objects/sharedtest/main.c.o: g.bob.cc $
        ${g.bob.SrcDir}/main.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sharedtest_host.cflags}
    conlyflags = ${m.sharedtest_host.conlyflags}

build ${g.bob.BuildDir}/host/executable/sharedtest: g.bob.executable $
        ${g.bob.BuildDir}/host/objects/sharedtest/main.c.o | $
        ${g.bob.BuildDir}/host/shared/libsharedtest_installed.so.toc $
        ${g.bob.BuildDir}/host/shared/libsharedtest_not_installed.so.toc || $
        ${g.bob.BuildDir}/host/shared/libsharedtest_installed.so $
        ${g.bob.BuildDir}/host/shared/libsharedtest_not_installed.so
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/host/shared
    shared_libs_flags = -lsharedtest_installed -lsharedtest_not_installed -Wl,-rpath-link,${g.bob.BuildDir}/host/shared
    static_libs = 

build sharedtest__host: phony ${g.bob.BuildDir}/host/executable/sharedtest

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sharedtest
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sharedtest_target.cflags = 
m.sharedtest_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/sharedtest/main.c.o: g.bob.cc $
        ${g.bob.SrcDir}/main.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sharedtest_target.cflags}
    conlyflags = ${m.sharedtest_target.conlyflags}

build ${g.bob.BuildDir}/target/executable/sharedtest: g.bob.executable $
        ${g.bob.BuildDir}/target/objects/sharedtest/main.c.o | $
        ${g.bob.BuildDir}/target/shared/libsharedtest_installed.so.toc $
        ${g.bob.BuildDir}/target/shared/libsharedtest_not_installed.so.toc || $
        ${g.bob.BuildDir}/target/shared/libsharedtest_installed.so $
        ${g.bob.BuildDir}/target/shared/libsharedtest_not_installed.so
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -lsharedtest_installed -lsharedtest_not_installed -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = 

build sharedtest__target: phony ${g.bob.BuildDir}/target/executable/sharedtest
default sharedtest__target

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_liba
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sl_liba_target.cflags = -fPIC -DFOO=1
m.sl_liba_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/sl_liba/a.c.o: g.bob.cc $
        ${g.bob.SrcDir}/a.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sl_liba_target.cflags}
    conlyflags = ${m.sl_liba_target.conlyflags}

build ${g.bob.BuildDir}/target/static/sl_liba.a: g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/sl_liba/a.c.o
    ar = ar
    build_wrapper = 

build sl_liba: phony ${g.bob.BuildDir}/target/static/sl_liba.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_liba_duplicates
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sl_liba_duplicates_target.cflags = -DFOO=1
m.sl_liba_duplicates_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/sl_liba_duplicates/a/a.c.o: g.bob.cc $
        ${g.bob.SrcDir}/a/a.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sl_liba_duplicates_target.cflags}
    conlyflags = ${m.sl_liba_duplicates_target.conlyflags}

build ${g.bob.BuildDir}/target/objects/sl_liba_duplicates/a.c.o: g.bob.cc $
        ${g.bob.SrcDir}/a.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sl_liba_duplicates_target.cflags}
    conlyflags = ${m.sl_liba_duplicates_target.conlyflags}

build ${g.bob.BuildDir}/target/static/sl_liba_duplicates.a: $
        g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/sl_liba_duplicates/a/a.c.o $
        ${g.bob.BuildDir}/target/objects/sl_liba_duplicates/a.c.o
    ar = ar
    build_wrapper = 

build sl_liba_duplicates: phony $
        ${g.bob.BuildDir}/target/static/sl_liba_duplicates.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_liba_duplicates_2
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

build ${g.bob.BuildDir}/target/static/sl_liba_duplicates_2.a: $
        g.bob.whole_static_library | ${g.bob.whole_static_tool} $
        ${g.bob.BuildDir}/target/static/sl_liba_duplicates.a
    ar = ar
    build_wrapper = 
    whole_static_libs = ${g.bob.BuildDir}/target/static/sl_liba_duplicates.a

build sl_liba_duplicates_2: phony $
        ${g.bob.BuildDir}/target/static/sl_liba_duplicates_2.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_libb
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sl_libb_target.cflags = -fPIC -DFOO=1
m.sl_libb_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/sl_libb/b.c.o: g.bob.cc $
        ${g.bob.SrcDir}/b.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sl_libb_target.cflags}
    conlyflags = ${m.sl_libb_target.conlyflags}

build ${g.bob.BuildDir}/target/static/sl_libb.a: g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/sl_libb/b.c.o
    ar = ar
    build_wrapper = 

build sl_libb: phony ${g.bob.BuildDir}/target/static/sl_libb.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_libb_export_static
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sl_libb_export_static_target.cflags = -DFOO=1
m.sl_libb_export_static_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/sl_libb_export_static/b.c.o: g.bob.cc $
        ${g.bob.SrcDir}/b.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sl_libb_export_static_target.cflags}
    conlyflags = ${m.sl_libb_export_static_target.conlyflags}

build ${g.bob.BuildDir}/target/static/sl_libb_export_static.a: $
        g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/sl_libb_export_static/b.c.o
    ar = ar
    build_wrapper = 

build sl_libb_export_static: phony $
        ${g.bob.BuildDir}/target/static/sl_libb_export_static.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_libb_shared
# Variant: target
# Type:    bob_shared_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

build ${g.bob.BuildDir}/target/shared/sl_libb_shared.so: g.bob.shared_library $
        | ${g.bob.BuildDir}/target/static/sl_libb.a $
        ${g.bob.BuildDir}/target/static/sl_liba.a
    build_wrapper = 
    ldflags = -Wl,--no-undefined -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = -Wl,--whole-archive ${g.bob.BuildDir}/target/static/sl_libb.a -Wl,--no-whole-archive ${g.bob.BuildDir}/target/static/sl_liba.a

build ${g.bob.BuildDir}/target/shared/sl_libb_shared.so.toc: $
        g.bob.shared_library_toc $
        ${g.bob.BuildDir}/target/shared/sl_libb_shared.so | ${g.bob.toc}
    tocflags = --format elf --objdump-tool objdump

build sl_libb_shared: phony ${g.bob.BuildDir}/target/shared/sl_libb_shared.so

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_libb_whole_inclusion
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sl_libb_whole_inclusion_target.cflags = -fPIC -DFOO=1
m.sl_libb_whole_inclusion_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/sl_libb_whole_inclusion/b.c.o: g.bob.cc $
        ${g.bob.SrcDir}/b.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sl_libb_whole_inclusion_target.cflags}
    conlyflags = ${m.sl_libb_whole_inclusion_target.conlyflags}

build ${g.bob.BuildDir}/target/static/sl_libb_whole_inclusion.a: $
        g.bob.whole_static_library $
        ${g.bob.BuildDir}/target/objects/sl_libb_whole_inclusion/b.c.o | $
        ${g.bob.whole_static_tool} ${g.bob.BuildDir}/target/static/sl_liba.a
    ar = ar
    build_wrapper = 
    whole_static_libs = ${g.bob.BuildDir}/target/static/sl_liba.a

build sl_libb_whole_inclusion: phony $
        ${g.bob.BuildDir}/target/static/sl_libb_whole_inclusion.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_libb_whole_shared
# Variant: target
# Type:    bob_shared_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

build ${g.bob.BuildDir}/target/shared/sl_libb_whole_shared.so: $
        g.bob.shared_library | $
        ${g.bob.BuildDir}/target/static/sl_libb_whole_inclusion.a
    build_wrapper = 
    ldflags = -Wl,--no-undefined -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = -Wl,--whole-archive ${g.bob.BuildDir}/target/static/sl_libb_whole_inclusion.a -Wl,--no-whole-archive

build ${g.bob.BuildDir}/target/shared/sl_libb_whole_shared.so.toc: $
        g.bob.shared_library_toc $
        ${g.bob.BuildDir}/target/shared/sl_libb_whole_shared.so | ${g.bob.toc}
    tocflags = --format elf --objdump-tool objdump

build sl_libb_whole_shared: phony $
        ${g.bob.BuildDir}/target/shared/sl_libb_whole_shared.so

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_libc
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sl_libc_target.cflags = -DFUNCTION=do_c -DCALL1=do_e1 -DCALL2=do_f
m.sl_libc_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/sl_libc/call_two_functions.c.o: $
        g.bob.cc ${g.bob.SrcDir}/call_two_functions.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sl_libc_target.cflags}
    conlyflags = ${m.sl_libc_target.conlyflags}

build ${g.bob.BuildDir}/target/static/sl_libc.a: g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/sl_libc/call_two_functions.c.o
    ar = ar
    build_wrapper = 

build sl_libc: phony ${g.bob.BuildDir}/target/static/sl_libc.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_libd
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sl_libd_target.cflags = -DFUNCTION=do_d -DCALL1=do_g1 -DCALL2=do_h
m.sl_libd_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/sl_libd/call_two_functions.c.o: $
        g.bob.cc ${g.bob.SrcDir}/call_two_functions.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sl_libd_target.cflags}
    conlyflags = ${m.sl_libd_target.conlyflags}

build ${g.bob.BuildDir}/target/static/sl_libd.a: g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/sl_libd/call_two_functions.c.o
    ar = ar
    build_wrapper = 

build sl_libd: phony ${g.bob.BuildDir}/target/static/sl_libd.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_libe
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sl_libe_target.cflags = -DFUNCTION=do_e
m.sl_libe_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/sl_libe/call_no_functions.c.o: g.bob.cc $
        ${g.bob.SrcDir}/call_no_functions.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sl_libe_target.cflags}
    conlyflags = ${m.sl_libe_target.conlyflags}

build ${g.bob.BuildDir}/target/static/sl_libe.a: g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/sl_libe/call_no_functions.c.o
    ar = ar
    build_wrapper = 

build sl_libe: phony ${g.bob.BuildDir}/target/static/sl_libe.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_libf
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sl_libf_target.cflags = -DFUNCTION=do_f -DCALL=do_g2
m.sl_libf_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/sl_libf/call_one_function.c.o: g.bob.cc $
        ${g.bob.SrcDir}/call_one_function.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sl_libf_target.cflags}
    conlyflags = ${m.sl_libf_target.conlyflags}

build ${g.bob.BuildDir}/target/static/sl_libf.a: g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/sl_libf/call_one_function.c.o
    ar = ar
    build_wrapper = 

build sl_libf: phony ${g.bob.BuildDir}/target/static/sl_libf.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_libg
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sl_libg_target.cflags = -DFUNCTION=do_g
m.sl_libg_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/sl_libg/call_no_functions.c.o: g.bob.cc $
        ${g.bob.SrcDir}/call_no_functions.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sl_libg_target.cflags}
    conlyflags = ${m.sl_libg_target.conlyflags}

build ${g.bob.BuildDir}/target/static/sl_libg.a: g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/sl_libg/call_no_functions.c.o
    ar = ar
    build_wrapper = 

build sl_libg: phony ${g.bob.BuildDir}/target/static/sl_libg.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_libh
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sl_libh_target.cflags = -DFUNCTION=do_h -DCALL=do_e2
m.sl_libh_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/sl_libh/call_one_function.c.o: g.bob.cc $
        ${g.bob.SrcDir}/call_one_function.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sl_libh_target.cflags}
    conlyflags = ${m.sl_libh_target.conlyflags}

build ${g.bob.BuildDir}/target/static/sl_libh.a: g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/sl_libh/call_one_function.c.o
    ar = ar
    build_wrapper = 

build sl_libh: phony ${g.bob.BuildDir}/target/static/sl_libh.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_main_dd
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sl_main_dd_target.cflags = 
m.sl_main_dd_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/sl_main_dd/main2.c.o: g.bob.cc $
        ${g.bob.SrcDir}/main2.c
    build_wrapper = ${g.bob.SrcDir}/static_libs/check_link_order.py
    ccompiler = gcc
    cflags = ${m.sl_main_dd_target.cflags}
    conlyflags = ${m.sl_main_dd_target.conlyflags}

build ${g.bob.BuildDir}/target/executable/sl_main_dd: g.bob.executable $
        ${g.bob.BuildDir}/target/objects/sl_main_dd/main2.c.o | $
        ${g.bob.BuildDir}/target/static/sl_libc.a $
        ${g.bob.BuildDir}/target/static/sl_libd.a $
        ${g.bob.BuildDir}/target/static/sl_libh.a $
        ${g.bob.BuildDir}/target/static/sl_libe.a $
        ${g.bob.BuildDir}/target/static/sl_libf.a $
        ${g.bob.BuildDir}/target/static/sl_libg.a
    build_wrapper = ${g.bob.SrcDir}/static_libs/check_link_order.py
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = ${g.bob.BuildDir}/target/static/sl_libc.a ${g.bob.BuildDir}/target/static/sl_libd.a ${g.bob.BuildDir}/target/static/sl_libh.a ${g.bob.BuildDir}/target/static/sl_libe.a ${g.bob.BuildDir}/target/static/sl_libf.a ${g.bob.BuildDir}/target/static/sl_libg.a

build sl_main_dd: phony ${g.bob.BuildDir}/target/executable/sl_main_dd
default sl_main_dd

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_main_duplicates
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sl_main_duplicates_target.cflags = -DFOO=1
m.sl_main_duplicates_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/sl_main_duplicates/main3.c.o: g.bob.cc $
        ${g.bob.SrcDir}/main3.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sl_main_duplicates_target.cflags}
    conlyflags = ${m.sl_main_duplicates_target.conlyflags}

build ${g.bob.BuildDir}/target/executable/sl_main_duplicates: g.bob.executable $
        ${g.bob.BuildDir}/target/objects/sl_main_duplicates/main3.c.o | $
        ${g.bob.BuildDir}/target/static/sl_liba_duplicates_2.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = ${g.bob.BuildDir}/target/static/sl_liba_duplicates_2.a

build sl_main_duplicates: phony $
        ${g.bob.BuildDir}/target/executable/sl_main_duplicates
default sl_main_duplicates

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_main_export_static
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sl_main_export_static_target.cflags = -DFOO=1
m.sl_main_export_static_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/sl_main_export_static/main.c.o: $
        g.bob.cc ${g.bob.SrcDir}/main.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sl_main_export_static_target.cflags}
    conlyflags = ${m.sl_main_export_static_target.conlyflags}

build ${g.bob.BuildDir}/target/executable/sl_main_export_static: $
        g.bob.executable $
        ${g.bob.BuildDir}/target/objects/sl_main_export_static/main.c.o | $
        ${g.bob.BuildDir}/target/static/sl_libb_export_static.a $
        ${g.bob.BuildDir}/target/static/sl_liba.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = ${g.bob.BuildDir}/target/static/sl_libb_export_static.a ${g.bob.BuildDir}/target/static/sl_liba.a

build sl_main_export_static: phony $
        ${g.bob.BuildDir}/target/executable/sl_main_export_static
default sl_main_export_static

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_main_ordered
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sl_main_ordered_target.cflags = -DFOO=1
m.sl_main_ordered_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/sl_main_ordered/main.c.o: g.bob.cc $
        ${g.bob.SrcDir}/main.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sl_main_ordered_target.cflags}
    conlyflags = ${m.sl_main_ordered_target.conlyflags}

build ${g.bob.BuildDir}/target/executable/sl_main_ordered: g.bob.executable $
        ${g.bob.BuildDir}/target/objects/sl_main_ordered/main.c.o | $
        ${g.bob.BuildDir}/target/static/sl_libb.a $
        ${g.bob.BuildDir}/target/static/sl_liba.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = ${g.bob.BuildDir}/target/static/sl_libb.a ${g.bob.BuildDir}/target/static/sl_liba.a

build sl_main_ordered: phony $
        ${g.bob.BuildDir}/target/executable/sl_main_ordered
default sl_main_ordered

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  sl_main_whole
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.sl_main_whole_target.cflags = 
m.sl_main_whole_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/sl_main_whole/main.c.o: g.bob.cc $
        ${g.bob.SrcDir}/main.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.sl_main_whole_target.cflags}
    conlyflags = ${m.sl_main_whole_target.conlyflags}

build ${g.bob.BuildDir}/target/executable/sl_main_whole: g.bob.executable $
        ${g.bob.BuildDir}/target/objects/sl_main_whole/main.c.o | $
        ${g.bob.BuildDir}/target/static/sl_libb_whole_inclusion.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = ${g.bob.BuildDir}/target/static/sl_libb_whole_inclusion.a

build sl_main_whole: phony ${g.bob.BuildDir}/target/executable/sl_main_whole
default sl_main_whole

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  strict_lib_binary_with_dep
# Variant: host
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.strict_lib_binary_with_dep_host.cflags = -DFORWARDED_DEFINE -isystem internal/include
m.strict_lib_binary_with_dep_host.cxxflags = 

build $
        ${g.bob.BuildDir}/host/objects/strict_lib_binary_with_dep/nested/src/main.cpp.o $
        : g.bob.cxx ${g.bob.SrcDir}/nested/src/main.cpp
    build_wrapper = 
    cflags = ${m.strict_lib_binary_with_dep_host.cflags}
    cxxcompiler = g++
    cxxflags = ${m.strict_lib_binary_with_dep_host.cxxflags}

build ${g.bob.BuildDir}/host/executable/strict_lib_binary_with_dep: $
        g.bob.executable $
        ${g.bob.BuildDir}/host/objects/strict_lib_binary_with_dep/nested/src/main.cpp.o $
        | ${g.bob.BuildDir}/host/static/lib_dep.a $
        ${g.bob.BuildDir}/host/static/lib_forward_defines.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/host/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/host/shared
    static_libs = ${g.bob.BuildDir}/host/static/lib_dep.a ${g.bob.BuildDir}/host/static/lib_forward_defines.a

build strict_lib_binary_with_dep: phony $
        ${g.bob.BuildDir}/host/executable/strict_lib_binary_with_dep
default strict_lib_binary_with_dep

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  strict_lib_binary_with_forward_define
# Variant: host
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.strict_lib_binary_with_forward_define_host.cflags = -DFORWARDED_DEFINE -isystem internal/include
m.strict_lib_binary_with_forward_define_host.cxxflags = 

build $
        ${g.bob.BuildDir}/host/objects/strict_lib_binary_with_forward_define/nested/src/main.cpp.o $
        : g.bob.cxx ${g.bob.SrcDir}/nested/src/main.cpp
    build_wrapper = 
    cflags = ${m.strict_lib_binary_with_forward_define_host.cflags}
    cxxcompiler = g++
    cxxflags = ${m.strict_lib_binary_with_forward_define_host.cxxflags}

build ${g.bob.BuildDir}/host/executable/strict_lib_binary_with_forward_define: $
        g.bob.executable $
        ${g.bob.BuildDir}/host/objects/strict_lib_binary_with_forward_define/nested/src/main.cpp.o $
        | ${g.bob.BuildDir}/host/static/lib_forward_defines.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/host/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/host/shared
    static_libs = ${g.bob.BuildDir}/host/static/lib_forward_defines.a

build strict_lib_binary_with_forward_define: phony $
        ${g.bob.BuildDir}/host/executable/strict_lib_binary_with_forward_define
default strict_lib_binary_with_forward_define

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  strict_lib_binary_with_transitive_define
# Variant: host
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.strict_lib_binary_with_transitive_define_host.cflags = -DFORWARDED_DEFINE -isystem internal/include
m.strict_lib_binary_with_transitive_define_host.cxxflags = 

build $
        ${g.bob.BuildDir}/host/objects/strict_lib_binary_with_transitive_define/nested/src/main.cpp.o $
        : g.bob.cxx ${g.bob.SrcDir}/nested/src/main.cpp
    build_wrapper = 
    cflags = ${m.strict_lib_binary_with_transitive_define_host.cflags}
    cxxcompiler = g++
    cxxflags = ${m.strict_lib_binary_with_transitive_define_host.cxxflags}

build $
        ${g.bob.BuildDir}/host/executable/strict_lib_binary_with_transitive_define $
        : g.bob.executable $
        ${g.bob.BuildDir}/host/objects/strict_lib_binary_with_transitive_define/nested/src/main.cpp.o $
        | ${g.bob.BuildDir}/host/static/lib_transitive_define.a $
        ${g.bob.BuildDir}/host/static/lib_forward_defines.a
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/host/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/host/shared
    static_libs = ${g.bob.BuildDir}/host/static/lib_transitive_define.a ${g.bob.BuildDir}/host/static/lib_forward_defines.a

build strict_lib_binary_with_transitive_define: phony $
        ${g.bob.BuildDir}/host/executable/strict_lib_binary_with_transitive_define
default strict_lib_binary_with_transitive_define

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  stripped_binary
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.stripped_binary_target.cflags = -DFUNC_NAME=main
m.stripped_binary_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/stripped_binary/lib.c.o: g.bob.cc $
        ${g.bob.SrcDir}/lib.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.stripped_binary_target.cflags}
    conlyflags = ${m.stripped_binary_target.conlyflags}

build ${g.bob.BuildDir}/target/executable/stripped_binary: g.bob.executable $
        ${g.bob.BuildDir}/target/objects/stripped_binary/lib.c.o | $
        ${g.bob.BuildDir}/target/shared/libstripped_library.so.toc || $
        ${g.bob.BuildDir}/target/shared/libstripped_library.so
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -lstripped_library -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = 

build ${g.bob.BuildDir}/target/strip/stripped_binary: g.bob.strip $
        ${g.bob.BuildDir}/target/executable/stripped_binary | ${g.bob.strip}
    args = --format elf --objcopy-tool objcopy --strip

build ${g.bob.BuildDir}/install/bin/stripped_binary: g.bob.install $
        ${g.bob.BuildDir}/target/strip/stripped_binary

build stripped_binary: phony ${g.bob.BuildDir}/install/bin/stripped_binary $
        libstripped_library $
        ${g.bob.BuildDir}/target/executable/stripped_binary
default stripped_binary

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  use_sharedtest_host
# Variant:
# Type:    bob_generate_source
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

rule m.use_sharedtest_host_.gen_use_sharedtest_host
    command = LD_LIBRARY_PATH=${g.bob.BuildDir}/host/shared:$$LD_LIBRARY_PATH ${host_bin} ${_out_}
    description = ${out}
    restat = true

build ${g.bob.BuildDir}/gen/use_sharedtest_host/use_sharedtest_host_main.c: $
        m.use_sharedtest_host_.gen_use_sharedtest_host | $
        ${g.bob.BuildDir}/host/executable/sharedtest $
        ${g.bob.BuildDir}/host/shared/libsharedtest_installed.so $
        ${g.bob.BuildDir}/host/shared/libsharedtest_not_installed.so
    _out_ = ${g.bob.BuildDir}/gen/use_sharedtest_host/use_sharedtest_host_main.c
    host_bin = ${g.bob.BuildDir}/host/executable/sharedtest

build use_sharedtest_host: phony $
        ${g.bob.BuildDir}/gen/use_sharedtest_host/use_sharedtest_host_main.c

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  use_sharedtest_host_gen_source
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.use_sharedtest_host_gen_source_target.cflags = 
m.use_sharedtest_host_gen_source_target.conlyflags = 

build $
        ${g.bob.BuildDir}/target/objects/use_sharedtest_host_gen_source/gen/use_sharedtest_host/use_sharedtest_host_main.c.o $
        : g.bob.cc $
        ${g.bob.BuildDir}/gen/use_sharedtest_host/use_sharedtest_host_main.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.use_sharedtest_host_gen_source_target.cflags}
    conlyflags = ${m.use_sharedtest_host_gen_source_target.conlyflags}

build ${g.bob.BuildDir}/target/executable/use_sharedtest_host_gen_source: $
        g.bob.executable $
        ${g.bob.BuildDir}/target/objects/use_sharedtest_host_gen_source/gen/use_sharedtest_host/use_sharedtest_host_main.c.o
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = 

build use_sharedtest_host_gen_source: phony $
        ${g.bob.BuildDir}/target/executable/use_sharedtest_host_gen_source
default use_sharedtest_host_gen_source

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  utility
# Variant: host
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.utility_host.cflags = 
m.utility_host.conlyflags = 

build ${g.bob.BuildDir}/host/objects/utility/srcs/main.c.o: g.bob.cc $
        ${g.bob.SrcDir}/srcs/main.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.utility_host.cflags}
    conlyflags = ${m.utility_host.conlyflags}

build ${g.bob.BuildDir}/host/executable/utility: g.bob.executable $
        ${g.bob.BuildDir}/host/objects/utility/srcs/main.c.o | $
        ${g.bob.BuildDir}/host/shared/libsharedtest.so.1.2.1.toc || $
        ${g.bob.BuildDir}/host/shared/libsharedtest.so
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/host/shared
    shared_libs_flags = -lsharedtest -Wl,-rpath-link,${g.bob.BuildDir}/host/shared
    static_libs = 

build utility__host: phony ${g.bob.BuildDir}/host/executable/utility

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  utility
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:redacted

m.utility_target.cflags = 
m.utility_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/utility/srcs/main.c.o: g.bob.cc $
        ${g.bob.SrcDir}/srcs/main.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.utility_target.cflags}
    conlyflags = ${m.utility_target.conlyflags}

build ${g.bob.BuildDir}/target/executable/utility: g.bob.executable $
        ${g.bob.BuildDir}/target/objects/utility/srcs/main.c.o | $
        ${g.bob.BuildDir}/target/shared/libsharedtest.so.1.2.1.toc || $
        ${g.bob.BuildDir}/target/shared/libsharedtest.so
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -lsharedtest -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = 

build utility__target: phony ${g.bob.BuildDir}/target/executable/utility
default utility__target

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Singleton: bootstrap
# Factory:   github.com/google/blueprint/bootstrap.Main.func4

rule s.bootstrap.bigbpDocs
    command = ${g.bootstrap.BinDir}/minibp -p -l redacted/bplist -b ${g.bootstrap.buildDir} --docs ${out} ${g.bootstrap.srcDir}/build.bp
    description = minibp docs ${out}

build ${g.bootstrap.buildDir}/bin/minibp: g.bootstrap.cp $
        ${g.bootstrap.BinDir}/minibp
default ${g.bootstrap.buildDir}/bin/minibp

build ${g.bootstrap.buildDir}/.primary/docs/minibp.html: s.bootstrap.bigbpDocs $
        | ${g.bootstrap.BinDir}/minibp
default ${g.bootstrap.buildDir}/.primary/docs/minibp.html

build blueprint_docs: phony ${g.bootstrap.buildDir}/.primary/docs/minibp.html
default blueprint_docs

build blueprint_tools: phony
default blueprint_tools

