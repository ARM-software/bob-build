# ******************************************************************************
# ***            This file is generated and should not be edited             ***
# ******************************************************************************
#
# This file contains variables, rules, and pools with name prefixes indicating
# they were generated by the following Go packages:
#
#     bob       [from Go package bob]
#     bootstrap [from Go package github.com/google/blueprint/bootstrap]
#
ninja_required_version = 1.7.0

g.bob.BuildDir = %WORKSPACEPATH%

g.bob.SrcDir = %WORKSPACEPATH%

g.bootstrap.BinDir = %WORKSPACEPATH%/.bootstrap/bin

g.bootstrap.buildDir = %WORKSPACEPATH%

g.bootstrap.ninjaBuildDir = %WORKSPACEPATH%

g.bootstrap.srcDir = %WORKSPACEPATH%

# Limit the parallelization of linking, which is memory intensive
pool g.bob.link
    depth = 1

builddir = ${g.bootstrap.ninjaBuildDir}

rule g.bob.cc
    command = ${build_wrapper} ${ccompiler} -c ${cflags} ${conlyflags} -MMD -MF ${depfile} ${in} -o ${out}
    depfile = ${out}.d
    deps = gcc
    description = ${out}

rule g.bob.executable
    pool = g.bob.link
    command = ${build_wrapper} ${linker} ${in} -o ${out} ${ldflags} ${static_libs} -L${shared_libs_dir} ${shared_libs_flags} ${ldlibs}
    description = ${out}

rule g.bob.static_library
    command = rm -f ${out} && ${build_wrapper} ${ar} -rcs ${out} ${in}
    description = ${out}

rule g.bootstrap.cp
    command = cp ${in} ${out}
    description = cp ${out}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  bin
# Variant: target
# Type:    bob_binary
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:108:1

m.bin_target.cflags = 
m.bin_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/bin/main.c.o: g.bob.cc $
        ${g.bob.SrcDir}/main.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.bin_target.cflags}
    conlyflags = ${m.bin_target.conlyflags}

build ${g.bob.BuildDir}/target/objects/bin/src/dummy01.c.o: g.bob.cc $
        ${g.bob.SrcDir}/src/dummy01.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.bin_target.cflags}
    conlyflags = ${m.bin_target.conlyflags}

build $
        ${g.bob.BuildDir}/target/objects/bin//gen/nested_generated_source/nested_generated.c.o $
        : g.bob.cc $
        ${g.bob.BuildDir}/gen/nested_generated_source/nested_generated.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.bin_target.cflags}
    conlyflags = ${m.bin_target.conlyflags}

build $
        ${g.bob.BuildDir}/target/objects/bin//gen/nested_transform_source/nested_out01.c.o $
        : g.bob.cc $
        ${g.bob.BuildDir}/gen/nested_transform_source/nested_out01.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.bin_target.cflags}
    conlyflags = ${m.bin_target.conlyflags}

build $
        ${g.bob.BuildDir}/target/objects/bin//gen/nested_transform_source/nested_out02.c.o $
        : g.bob.cc $
        ${g.bob.BuildDir}/gen/nested_transform_source/nested_out02.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.bin_target.cflags}
    conlyflags = ${m.bin_target.conlyflags}

build $
        ${g.bob.BuildDir}/target/objects/bin//gen/nested_transform_source/transform_source/out01.c.o $
        : g.bob.cc $
        ${g.bob.BuildDir}/gen/nested_transform_source/transform_source/out01.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.bin_target.cflags}
    conlyflags = ${m.bin_target.conlyflags}

build $
        ${g.bob.BuildDir}/target/objects/bin//gen/nested_transform_source/transform_source/out02.c.o $
        : g.bob.cc $
        ${g.bob.BuildDir}/gen/nested_transform_source/transform_source/out02.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.bin_target.cflags}
    conlyflags = ${m.bin_target.conlyflags}

build ${g.bob.BuildDir}/target/objects/bin//gen/genrule/genrule_dummy01.c.o: $
        g.bob.cc ${g.bob.BuildDir}/gen/genrule/genrule_dummy01.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.bin_target.cflags}
    conlyflags = ${m.bin_target.conlyflags}

build ${g.bob.BuildDir}/target/objects/bin//gen/genrule/genrule_dummy02.c.o: $
        g.bob.cc ${g.bob.BuildDir}/gen/genrule/genrule_dummy02.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.bin_target.cflags}
    conlyflags = ${m.bin_target.conlyflags}

build ${g.bob.BuildDir}/target/executable/bin: g.bob.executable $
        ${g.bob.BuildDir}/target/objects/bin/main.c.o $
        ${g.bob.BuildDir}/target/objects/bin/src/dummy01.c.o $
        ${g.bob.BuildDir}/target/objects/bin//gen/nested_generated_source/nested_generated.c.o $
        ${g.bob.BuildDir}/target/objects/bin//gen/nested_transform_source/nested_out01.c.o $
        ${g.bob.BuildDir}/target/objects/bin//gen/nested_transform_source/nested_out02.c.o $
        ${g.bob.BuildDir}/target/objects/bin//gen/nested_transform_source/transform_source/out01.c.o $
        ${g.bob.BuildDir}/target/objects/bin//gen/nested_transform_source/transform_source/out02.c.o $
        ${g.bob.BuildDir}/target/objects/bin//gen/genrule/genrule_dummy01.c.o $
        ${g.bob.BuildDir}/target/objects/bin//gen/genrule/genrule_dummy02.c.o
    build_wrapper = 
    ldflags = -Wl,--as-needed
    ldlibs = 
    linker = g++
    shared_libs_dir = ${g.bob.BuildDir}/target/shared
    shared_libs_flags = -Wl,-rpath-link,${g.bob.BuildDir}/target/shared
    static_libs = 

build bin: phony ${g.bob.BuildDir}/target/executable/bin
default bin

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  generated_source
# Variant:
# Type:    bob_generate_source
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:32:1

rule m.generated_source_.gen_generated_source
    command = touch ${_out_}
    description = ${out}
    restat = true

build ${g.bob.BuildDir}/gen/generated_source/generated.c: $
        m.generated_source_.gen_generated_source
    _out_ = ${g.bob.BuildDir}/gen/generated_source/generated.c

build generated_source: phony $
        ${g.bob.BuildDir}/gen/generated_source/generated.c

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  genrule
# Variant:
# Type:    bob_genrule
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:18:1

rule m.genrule_.gen_genrule
    command = touch ${_out_}
    description = ${out}
    restat = true

build ${g.bob.BuildDir}/gen/genrule/genrule_dummy01.c $
        ${g.bob.BuildDir}/gen/genrule/genrule_dummy02.c: $
        m.genrule_.gen_genrule ${g.bob.SrcDir}/dummy01.c $
        ${g.bob.SrcDir}/dummy02.c
    _out_ = ${g.bob.BuildDir}/gen/genrule/genrule_dummy01.c ${g.bob.BuildDir}/gen/genrule/genrule_dummy02.c

build genrule: phony ${g.bob.BuildDir}/gen/genrule/genrule_dummy01.c $
        ${g.bob.BuildDir}/gen/genrule/genrule_dummy02.c

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  lib
# Variant: target
# Type:    bob_static_library
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:96:1

m.lib_target.cflags = 
m.lib_target.conlyflags = 

build ${g.bob.BuildDir}/target/objects/lib/main.c.o: g.bob.cc $
        ${g.bob.SrcDir}/main.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.lib_target.cflags}
    conlyflags = ${m.lib_target.conlyflags}

build ${g.bob.BuildDir}/target/objects/lib/src/dummy01.c.o: g.bob.cc $
        ${g.bob.SrcDir}/src/dummy01.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.lib_target.cflags}
    conlyflags = ${m.lib_target.conlyflags}

build $
        ${g.bob.BuildDir}/target/objects/lib//gen/nested_generated_source/nested_generated.c.o $
        : g.bob.cc $
        ${g.bob.BuildDir}/gen/nested_generated_source/nested_generated.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.lib_target.cflags}
    conlyflags = ${m.lib_target.conlyflags}

build $
        ${g.bob.BuildDir}/target/objects/lib//gen/nested_transform_source/nested_out01.c.o $
        : g.bob.cc $
        ${g.bob.BuildDir}/gen/nested_transform_source/nested_out01.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.lib_target.cflags}
    conlyflags = ${m.lib_target.conlyflags}

build $
        ${g.bob.BuildDir}/target/objects/lib//gen/nested_transform_source/nested_out02.c.o $
        : g.bob.cc $
        ${g.bob.BuildDir}/gen/nested_transform_source/nested_out02.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.lib_target.cflags}
    conlyflags = ${m.lib_target.conlyflags}

build $
        ${g.bob.BuildDir}/target/objects/lib//gen/nested_transform_source/transform_source/out01.c.o $
        : g.bob.cc $
        ${g.bob.BuildDir}/gen/nested_transform_source/transform_source/out01.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.lib_target.cflags}
    conlyflags = ${m.lib_target.conlyflags}

build $
        ${g.bob.BuildDir}/target/objects/lib//gen/nested_transform_source/transform_source/out02.c.o $
        : g.bob.cc $
        ${g.bob.BuildDir}/gen/nested_transform_source/transform_source/out02.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.lib_target.cflags}
    conlyflags = ${m.lib_target.conlyflags}

build ${g.bob.BuildDir}/target/objects/lib//gen/genrule/genrule_dummy01.c.o: $
        g.bob.cc ${g.bob.BuildDir}/gen/genrule/genrule_dummy01.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.lib_target.cflags}
    conlyflags = ${m.lib_target.conlyflags}

build ${g.bob.BuildDir}/target/objects/lib//gen/genrule/genrule_dummy02.c.o: $
        g.bob.cc ${g.bob.BuildDir}/gen/genrule/genrule_dummy02.c
    build_wrapper = 
    ccompiler = gcc
    cflags = ${m.lib_target.cflags}
    conlyflags = ${m.lib_target.conlyflags}

build ${g.bob.BuildDir}/target/static/lib.a: g.bob.static_library $
        ${g.bob.BuildDir}/target/objects/lib/main.c.o $
        ${g.bob.BuildDir}/target/objects/lib/src/dummy01.c.o $
        ${g.bob.BuildDir}/target/objects/lib//gen/nested_generated_source/nested_generated.c.o $
        ${g.bob.BuildDir}/target/objects/lib//gen/nested_transform_source/nested_out01.c.o $
        ${g.bob.BuildDir}/target/objects/lib//gen/nested_transform_source/nested_out02.c.o $
        ${g.bob.BuildDir}/target/objects/lib//gen/nested_transform_source/transform_source/out01.c.o $
        ${g.bob.BuildDir}/target/objects/lib//gen/nested_transform_source/transform_source/out02.c.o $
        ${g.bob.BuildDir}/target/objects/lib//gen/genrule/genrule_dummy01.c.o $
        ${g.bob.BuildDir}/target/objects/lib//gen/genrule/genrule_dummy02.c.o
    ar = ar
    build_wrapper = 

build lib: phony ${g.bob.BuildDir}/target/static/lib.a

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  nested_generated_source
# Variant:
# Type:    bob_generate_source
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:38:1

rule m.nested_generated_source_.gen_nested_generated_source
    command = touch ${_out_}
    description = ${out}
    restat = true

build ${g.bob.BuildDir}/gen/nested_generated_source/nested_generated.c: $
        m.nested_generated_source_.gen_nested_generated_source $
        ${g.bob.BuildDir}/gen/generated_source/generated.c
    _out_ = ${g.bob.BuildDir}/gen/nested_generated_source/nested_generated.c

build nested_generated_source: phony $
        ${g.bob.BuildDir}/gen/nested_generated_source/nested_generated.c

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  nested_transform_source
# Variant:
# Type:    bob_transform_source
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:58:1

rule m.nested_transform_source_.gen_nested_transform_source
    command = some_tool
    description = ${out}
    restat = true

build ${g.bob.BuildDir}/gen/nested_transform_source/nested_out01.c: $
        m.nested_transform_source_.gen_nested_transform_source $
        ${g.bob.SrcDir}/dummy01.c
    _out_ = ${g.bob.BuildDir}/gen/nested_transform_source/nested_out01.c

build ${g.bob.BuildDir}/gen/nested_transform_source/nested_out02.c: $
        m.nested_transform_source_.gen_nested_transform_source $
        ${g.bob.SrcDir}/dummy02.c
    _out_ = ${g.bob.BuildDir}/gen/nested_transform_source/nested_out02.c

build ${g.bob.BuildDir}/gen/nested_transform_source/transform_source/out01.c: $
        m.nested_transform_source_.gen_nested_transform_source $
        ${g.bob.BuildDir}/gen/transform_source/out01.c
    _out_ = ${g.bob.BuildDir}/gen/nested_transform_source/transform_source/out01.c

build ${g.bob.BuildDir}/gen/nested_transform_source/transform_source/out02.c: $
        m.nested_transform_source_.gen_nested_transform_source $
        ${g.bob.BuildDir}/gen/transform_source/out02.c
    _out_ = ${g.bob.BuildDir}/gen/nested_transform_source/transform_source/out02.c

build nested_transform_source: phony $
        ${g.bob.BuildDir}/gen/nested_transform_source/nested_out01.c $
        ${g.bob.BuildDir}/gen/nested_transform_source/nested_out02.c $
        ${g.bob.BuildDir}/gen/nested_transform_source/transform_source/out01.c $
        ${g.bob.BuildDir}/gen/nested_transform_source/transform_source/out02.c

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  transform_source
# Variant:
# Type:    bob_transform_source
# Factory: github.com/ARM-software/bob-build/core.Main.func1.1
# Defined: build.bp:45:1

rule m.transform_source_.gen_transform_source
    command = some_tool
    description = ${out}
    restat = true

build ${g.bob.BuildDir}/gen/transform_source/out01.c: $
        m.transform_source_.gen_transform_source ${g.bob.SrcDir}/dummy01.c
    _out_ = ${g.bob.BuildDir}/gen/transform_source/out01.c

build ${g.bob.BuildDir}/gen/transform_source/out02.c: $
        m.transform_source_.gen_transform_source ${g.bob.SrcDir}/dummy02.c
    _out_ = ${g.bob.BuildDir}/gen/transform_source/out02.c

build transform_source: phony ${g.bob.BuildDir}/gen/transform_source/out01.c $
        ${g.bob.BuildDir}/gen/transform_source/out02.c

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Singleton: bootstrap
# Factory:   github.com/google/blueprint/bootstrap.Main.func4

rule s.bootstrap.bigbpDocs
    command = ${g.bootstrap.BinDir}/minibp -p -l %WORKSPACEPATH%/bplist -b ${g.bootstrap.buildDir} --docs ${out} ${g.bootstrap.srcDir}/build.bp
    description = minibp docs ${out}

build ${g.bootstrap.buildDir}/bin/minibp: g.bootstrap.cp $
        ${g.bootstrap.BinDir}/minibp
default ${g.bootstrap.buildDir}/bin/minibp

build ${g.bootstrap.buildDir}/.primary/docs/minibp.html: s.bootstrap.bigbpDocs $
        | ${g.bootstrap.BinDir}/minibp
default ${g.bootstrap.buildDir}/.primary/docs/minibp.html

build blueprint_docs: phony ${g.bootstrap.buildDir}/.primary/docs/minibp.html
default blueprint_docs

build blueprint_tools: phony
default blueprint_tools

