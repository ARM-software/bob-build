package plugin

import (
	"github.com/bazelbuild/bazel-gazelle/label"
	"github.com/bazelbuild/bazel-gazelle/language"
	"github.com/bazelbuild/bazel-gazelle/rule"
)

type BobExtension struct {
}

func NewLanguage() language.Language {
	return &BobExtension{}
}

const BobExtensionName = "bob_build"

// Name returns the name of the language. This should be a prefix of the
// kinds of rules generated by the language, e.g., "go" for the Go Bobextension
// since it generates "go_library" rules.
func (e *BobExtension) Name() string {
	return BobExtensionName
}

// Embeds returns a list of labels of rules that the given rule embeds. If
// a rule is embedded by another importable rule of the same language, only
// the embedding rule will be indexed. The embedding rule will inherit
// the imports of the embedded rule.
func (e *BobExtension) Embeds(r *rule.Rule, from label.Label) []label.Label {
	return nil
}
