load("@bazel_skylib//rules:common_settings.bzl", "bool_flag", "string_flag")

# gazelle:bob_root

config_setting(
    name = "[__FEATURE_A]",
    flag_values = {"//:FEATURE_A": True},
)

config_setting(
    name = "![FEATURE_A]",
    flag_values = {"//:FEATURE_A": False},
)

alias(
    name = "[FEATURE_A]",
    actual = ":[__FEATURE_A]",
)

config_setting(
    name = "[__FEATURE_B]",
    flag_values = {"//:FEATURE_B": True},
)

config_setting(
    name = "![FEATURE_B]",
    flag_values = {"//:FEATURE_B": False},
)

alias(
    name = "[FEATURE_B]",
    actual = ":[__FEATURE_B]",
)

config_setting(
    name = "[__DEBUG]",
    flag_values = {"//:DEBUG": True},
)

config_setting(
    name = "![DEBUG]",
    flag_values = {"//:DEBUG": False},
)

alias(
    name = "[DEBUG]",
    actual = ":[__DEBUG]",
)

bool_flag(
    name = "FEATURE_A",
    build_setting_default = False,
)

bool_flag(
    name = "FEATURE_B",
    build_setting_default = True,
)

string_flag(
    name = "OPTION_B",
    build_setting_default = "--secret",
)

bool_flag(
    name = "DEBUG",
    build_setting_default = True,
)

filegroup(
    name = "greet_srcs",
    srcs = glob(["srcs/*.c"]) + select({
        "//conditions:default": [],
        "//:[FEATURE_A]": ["internal/file1.c"],
    }) + select({
        "//conditions:default": [],
        "//:[FEATURE_B]": ["internal/file2.c"],
    }),
)

filegroup(
    name = "glob_lib_srcs",
    srcs = glob(
        ["lib/**/*.c"],
        allow_empty = False,
        exclude = ["lib/**/exclude_*.cpp"],
        exclude_directories = True,
    ),
)
