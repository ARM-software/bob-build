load("@bazel_skylib//rules:common_settings.bzl", "bool_flag", "int_flag")
load("@bazel_skylib//lib:selects.bzl", "selects")

bool_flag(
    name = "feature_internal_a",
    build_setting_default = True,
)

config_setting(
    name = "config_feature_internal_a",
    flag_values = {
        ":feature_internal_a": "true",
    },
)

# depends on: [[//:feature_a && //:feature_b] || //internal:feature_internal_a]
bool_flag(
    name = "needs_deps",
    build_setting_default = False,
)

config_setting(
    name = "interim_config_needs_deps",
    flag_values = {
        ":needs_deps": "true",
    },
)

# autogenerated for internal use only
selects.config_setting_group(
    name = "needs_deps_and_1",
    match_all = [
        "//:config_feature_a",
        "//:config_feature_b",
    ],
    visibility = ["//visibility:private"],
)

# autogenerated for internal use only
selects.config_setting_group(
    name = "needs_deps_or_0",
    match_any = [
        ":needs_deps_and_1",
        "//internal:config_feature_internal_a",
    ],
    visibility = ["//visibility:private"],
)

selects.config_setting_group(
    name = "config_needs_deps",
    match_all = [
        ":interim_config_needs_deps",
        ":needs_deps_or_0",
    ],
    visibility = [":__subpackages__"],
)

# depends on: [[//:feature_a && //internal:feature_internal_a] && //:new_hw]
bool_flag(
    name = "has_hw_accelerator",
    build_setting_default = False,
)

config_setting(
    name = "interim_config_has_hw_accelerator",
    flag_values = {
        ":has_hw_accelerator": "true",
    },
)

# autogenerated for internal use only
selects.config_setting_group(
    name = "has_hw_accelerator_and_1",
    match_all = [
        "//:config_feature_a",
        "//internal:config_feature_internal_a",
    ],
    visibility = ["//visibility:private"],
)

# autogenerated for internal use only
selects.config_setting_group(
    name = "has_hw_accelerator_and_0",
    match_all = [
        ":has_hw_accelerator_and_1",
        "//:config_new_hw",
    ],
    visibility = ["//visibility:private"],
)

selects.config_setting_group(
    name = "config_has_hw_accelerator",
    match_all = [
        ":interim_config_has_hw_accelerator",
        ":has_hw_accelerator_and_0",
    ],
    visibility = [":__subpackages__"],
)

int_flag(
    name = "pipe_count",
    build_setting_default = 102,
)
